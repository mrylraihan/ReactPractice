{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart11(PracticeProjectFoodOrderApp)/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, despatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    despatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    despatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  }; //    this will be the concert cart context value \n\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"vDAb7OZ5MLw4cCO8mK8PNu7rIvk=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart11(PracticeProjectFoodOrderApp)/01-starting-project/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","concat","CartProvider","props","cartState","despatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAC,EADc;AAEpBC,EAAAA,WAAW,EAAC;AAFQ,CAAxB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAI,IAAGA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADL,CAA9B;AAIA,UAAMC,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEa,YADJ;AAEHZ,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CAdD;;AAgBA,MAAMgB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAlD;;AACA,QAAMoB,oBAAoB,GAAGZ,IAAI,IAAG;AAChCW,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMa,yBAAyB,GAAGR,EAAE,IAAG;AACnCM,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAC,QAAN;AAAeO,MAAAA,EAAE,EAAEA;AAAnB,KAAD,CAAlB;AACH,GAFD,CAN0B,CAS9B;;;AACI,QAAMS,WAAW,GAAE;AACfrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADF;AAEfC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFR;AAGfqB,IAAAA,OAAO,EAAEH,oBAHM;AAIfI,IAAAA,UAAU,EAAEH;AAJG,GAAnB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAnBD;;GAAMT,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport CartContext from \"./cart-context\";\n\n\nconst defaultCartState ={\n    items:[],\n    totalAmount:0\n}\n\nconst cartReducer =(state, action)=>{\n    if(action.type === 'ADD'){\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartItemIndex = state.items.findIndex(\n            item=> item.id === action.item.id\n            );\n            \n        const updatedItems = state.items.concat(action.item)\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n    return defaultCartState\n};\n\nconst CartProvider = props => {\n    const [cartState, despatchCartAction] = useReducer(cartReducer,defaultCartState)\n    const addItemToCartHandler = item =>{\n        despatchCartAction({type: 'ADD', item: item});\n    };\n\n    const removeItemFromCartHandler = id =>{\n        despatchCartAction({type:'REMOVE',id: id})\n    };\n//    this will be the concert cart context value \n    const cartContext= {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n};\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}