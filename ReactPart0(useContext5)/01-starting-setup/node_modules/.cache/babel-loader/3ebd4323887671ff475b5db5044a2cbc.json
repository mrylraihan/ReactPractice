{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useContext)/01-starting-setup/src/components/HighestLevelComp.js\",\n    _s = $RefreshSig$();\n\nimport TestLiftState from \"./TestLiftState2\";\nimport NameContext from \"../store/name-context\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HighestLevelComp() {\n  _s();\n\n  const [testState, setTestLiftState] = useState('');\n\n  const printTestState = a => {\n    const newInput = { ...a\n    };\n    setTestLiftState(newInput);\n  };\n\n  if (!testState) {} else {\n    console.log('from HighestLevelComp.js', testState);\n  } // useEffect(()=>{2\n  //   printTestState()\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(NameContext.Provider, {\n    value: {\n      name: testState\n    },\n    children: /*#__PURE__*/_jsxDEV(TestLiftState, {\n      setTestLiftState: setTestLiftState,\n      testState: testState,\n      printTestState: printTestState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n} // or you can do it like this \n// const HighestLevelComp = ()=>  (\n//     <div>\n//       <h2>Let's get started!</h2>\n//     </div>\n//   );\n\n\n_s(HighestLevelComp, \"NbMQPtcWlaHP1gkuEso3iXWijn8=\");\n\n_c = HighestLevelComp;\nexport default HighestLevelComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"HighestLevelComp\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useContext)/01-starting-setup/src/components/HighestLevelComp.js"],"names":["TestLiftState","NameContext","React","useState","HighestLevelComp","testState","setTestLiftState","printTestState","a","newInput","console","log","name"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAIA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,gBAAZ,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAMC,QAAQ,GAAG,EAAE,GAAGD;AAAL,KAAjB;AACAF,IAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACH,GAHD;;AAIA,MAAG,CAACJ,SAAJ,EAAc,CAEb,CAFD,MAEK;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCN,SAAxC;AACH,GAXuB,CAYxB;AACA;AACA;;;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAEP;AAAR,KAA7B;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,gBAAgB,EAAEC,gBAAjC;AAAmD,MAAA,SAAS,EAAED,SAA9D;AAAyE,MAAA,cAAc,EAAEE;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,C,CACD;AACA;AACA;AACA;AACA;AACA;;;GA7BSH,gB;;KAAAA,gB;AA+BT,eAAeA,gBAAf","sourcesContent":["import TestLiftState from \"./TestLiftState2\";\nimport NameContext from \"../store/name-context\";\nimport React, { useState } from \"react\";\n\n\n\nfunction HighestLevelComp() {\n    const [testState, setTestLiftState] = useState('')\n\n    const printTestState = (a) => {\n        const newInput = { ...a }\n        setTestLiftState(newInput)\n    };\n    if(!testState){\n\n    }else{\n        console.log('from HighestLevelComp.js', testState)\n    }\n    // useEffect(()=>{2\n    //   printTestState()\n    // })\n\n\n    return (\n        <NameContext.Provider value={{ name: testState , }}>\n            <TestLiftState setTestLiftState={setTestLiftState} testState={testState} printTestState={printTestState} />\n\n        </NameContext.Provider>\n    );\n}\n// or you can do it like this \n// const HighestLevelComp = ()=>  (\n//     <div>\n//       <h2>Let's get started!</h2>\n//     </div>\n//   );\n\nexport default HighestLevelComp;\n"]},"metadata":{},"sourceType":"module"}