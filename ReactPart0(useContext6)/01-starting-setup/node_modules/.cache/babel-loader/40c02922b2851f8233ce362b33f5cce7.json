{"ast":null,"code":"const gundamArrays = [{\n  pilot: 'Hero',\n  mechs: ['Wing Gundam', 'Wing Gundam 001', 'Wing Gundam 01']\n}, {\n  pilot: 'Qatra',\n  mechs: ['Sandrock', 'Wing Gundam 01']\n}, {\n  pilot: 'Duo',\n  mechs: ['Heavy Arms', 'Heavy Arms 2']\n}, {\n  pilot: 'Miliardo',\n  mechs: ['Tallgeese', 'Tallgees 00']\n}]; // const GundamIteration =()=>(\n//        <div>\n//       {gundamArrays.map((pil) => (\n//         <ul key={pil.pilot}>The Pilot is: {pil.pilot} {pil.mechs.map(gund=><li>{gund}</li>)}</ul>\n//       ))}\n//     </div>\n// )\n\nfunction GundamIteration() {}\n\n_c = GundamIteration;\nexport default GundamIteration;\n\nvar _c;\n\n$RefreshReg$(_c, \"GundamIteration\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(PersonalPractice)/01-starting-setup/src/components/GundamIteration.js"],"names":["gundamArrays","pilot","mechs","GundamIteration"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CACjB;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,gBAAnC;AAAvB,CADiB,EAEjB;AAACD,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,gBAAb;AAAxB,CAFiB,EAGjB;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,cAAf;AAAtB,CAHiB,EAIjB;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE,CAAC,WAAD,EAAc,aAAd;AAA3B,CAJiB,CAArB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,eAAT,GAA0B,CAEzB;;KAFQA,e;AAIT,eAAeA,eAAf","sourcesContent":["const gundamArrays = [\n    {pilot: 'Hero', mechs: ['Wing Gundam', 'Wing Gundam 001', 'Wing Gundam 01']}, \n    {pilot: 'Qatra', mechs: ['Sandrock', 'Wing Gundam 01']}, \n    {pilot: 'Duo', mechs: ['Heavy Arms', 'Heavy Arms 2']}, \n    {pilot: 'Miliardo', mechs: ['Tallgeese', 'Tallgees 00']}, \n]\n\n// const GundamIteration =()=>(\n//        <div>\n//       {gundamArrays.map((pil) => (\n//         <ul key={pil.pilot}>The Pilot is: {pil.pilot} {pil.mechs.map(gund=><li>{gund}</li>)}</ul>\n//       ))}\n//     </div>\n\n// )\n\nfunction GundamIteration(){\n    \n}\n\nexport default GundamIteration"]},"metadata":{},"sourceType":"module"}