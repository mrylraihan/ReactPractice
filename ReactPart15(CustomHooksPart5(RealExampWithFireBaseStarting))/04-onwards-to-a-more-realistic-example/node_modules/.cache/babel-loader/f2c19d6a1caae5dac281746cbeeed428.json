{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react'; //requestConfig will be a object with the url and any other config we will need \n\nconst useHttp = applyData => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }, [requestConfig, applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","applyData","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart15(CustomHooksPart4(RealExampWithFireBaseStarting))/04-onwards-to-a-more-realistic-example/src/hooks/use-http.jsx"],"sourcesContent":["import { useState, useCallback } from 'react'\n//requestConfig will be a object with the url and any other config we will need \nconst useHttp = ( applyData) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendRequest = useCallback(async (requestConfig) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                requestConfig.url,{\n                    method: requestConfig.method ? requestConfig.method: 'GET',\n                    headers:requestConfig.headers ? requestConfig.headers: {},\n                    body: requestConfig.body ? JSON.stringify(requestConfig.body):null,\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            applyData(data)\n            \n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    },[requestConfig, applyData]);\n\n\n    return {isLoading, error, sendRequest}\n}\n\nexport default useHttp"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC,C,CACA;;AACA,MAAMC,OAAO,GAAKC,SAAF,IAAgB;EAAA;;EAC5B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMQ,WAAW,GAAGP,WAAW,CAAC,MAAOQ,aAAP,IAAyB;IACrDJ,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACxBF,aAAa,CAACG,GADU,EACN;QACdC,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACI,MAArC,GAA6C,KADvC;QAEdC,OAAO,EAACL,aAAa,CAACK,OAAd,GAAwBL,aAAa,CAACK,OAAtC,GAA+C,EAFzC;QAGdC,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAAwD;MAHhD,CADM,CAA5B;;MAQA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAlB,SAAS,CAACiB,IAAD,CAAT;IAEH,CAhBD,CAgBE,OAAOE,GAAP,EAAY;MACVf,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACDlB,YAAY,CAAC,KAAD,CAAZ;EACH,CAvB8B,EAuB7B,CAACI,aAAD,EAAgBN,SAAhB,CAvB6B,CAA/B;EA0BA,OAAO;IAACC,SAAD;IAAYE,KAAZ;IAAmBE;EAAnB,CAAP;AACH,CA/BD;;GAAMN,O;;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}