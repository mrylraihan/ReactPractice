{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart3(ReactBasics)/CleanedUpReactProject/01-starting-setup/src/components/ExpenseItem.js\",\n    _s = $RefreshSig$();\n\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from './Card';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  _s();\n\n  // const [title, setTitle] = React.useState(props.title)\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    if (title !== 'updated!') {\n      setTitle('updated!');\n    } else {\n      setTitle(props.title);\n    }\n\n    let newTitle = title;\n    setTitle(newTitle); // const newTitle = oldTitle === 'updated!' ? title : otherTitle;\n\n    console.log(title);\n  }; // you can only hav one root element being returned\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: props.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Click Title!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart3(ReactBasics)/CleanedUpReactProject/01-starting-setup/src/components/ExpenseItem.js"],"names":["ExpenseDate","Card","React","useState","ExpenseItem","props","title","setTitle","clickHandler","newTitle","console","log","date","amount"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAlC;;AACA,QAAME,YAAY,GAAG,MAAM;AAE1B,QAAGF,KAAK,KAAK,UAAb,EAAwB;AACvBC,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACA,KAFD,MAEK;AACJA,MAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACA;;AAED,QAAIG,QAAQ,GAAGH,KAAf;AAEAC,IAAAA,QAAQ,CAACE,QAAD,CAAR,CAV0B,CAW1B;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,GAdD,CAH8B,CAmB9B;;;AACA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,IAAI,EAAED,KAAK,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACC;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCD,KAAK,CAACQ;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAMC;AAAQ,MAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CA9BD;;GAAMJ,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from './Card'\nimport React, { useState } from 'react'\n\nconst ExpenseItem = (props) => {\n\t// const [title, setTitle] = React.useState(props.title)\n\tconst [title, setTitle] = useState(props.title)\n\tconst clickHandler = () => {\n\t\t\n\t\tif(title !== 'updated!'){\n\t\t\tsetTitle('updated!')\n\t\t}else{\n\t\t\tsetTitle(props.title)\n\t\t}\n\n\t\tlet newTitle = title \n\n\t\tsetTitle(newTitle)\n\t\t// const newTitle = oldTitle === 'updated!' ? title : otherTitle;\n\n\t\tconsole.log(title)\n\t};\n\n\t// you can only hav one root element being returned\n\treturn (\n\t\t<Card className=\"expense-item\">\n\t\t\t<ExpenseDate date={props.date}></ExpenseDate>\n\t\t\t<div className='expense-item__description'>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<div className='expense-item__price'>{props.amount}</div>\n\t\t\t</div>\n\t\t\t<button onClick={clickHandler}>Click Title!</button>\n\t\t</Card>\n\t)\n}\nexport default ExpenseItem\n"]},"metadata":{},"sourceType":"module"}