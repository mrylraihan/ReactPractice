{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useEffect,useRef,useState)/01-starting-setup/src/components/HookTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookTimer() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hook timer = \", timer, /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"clear timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HookTimer, \"ebJi34r7i5iV6ijtknLV7I/4wK8=\");\n\n_c = HookTimer;\nexport default HookTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookTimer\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useEffect,useRef,useState)/01-starting-setup/src/components/HookTimer.js"],"names":["React","useState","useEffect","HookTimer","timer","setTimer","interval","setInterval","prevTimer","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAC7BF,MAAAA,QAAQ,CAACG,SAAS,IAAGA,SAAS,GAAE,CAAxB,CAAR;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAI;AACPC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,gCACkBF,KADlB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnBQD,S;;KAAAA,S;AAqBT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction HookTimer(){\n    const [timer, setTimer] = useState(0)\n\n    useEffect(()=>{\n        const interval = setInterval(()=>{\n            setTimer(prevTimer=> prevTimer +1)\n        }, 1000)\n        return ()=>{\n            clearInterval(interval)\n        };\n    }, [])\n\n    return (\n        <div>\n            Hook timer = {timer}\n            <button>clear timer</button>\n        </div>\n    )\n\n}\n\nexport default HookTimer"]},"metadata":{},"sourceType":"module"}