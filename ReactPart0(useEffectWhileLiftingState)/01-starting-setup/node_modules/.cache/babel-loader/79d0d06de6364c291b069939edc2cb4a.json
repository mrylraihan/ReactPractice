{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useEffect,useRef,useState)/01-starting-setup/src/components/ControlledFStateAndRef.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ControlledFStateAndRef = props => {\n  _s();\n\n  const [userInput, setUserInput] = useState({\n    name: '',\n    Over6Chars: false\n  });\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n    console.log('destructured properly');\n  }, []);\n\n  const handleChange = event => {\n    setUserInput(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(userInput.name, ' from functional controlled Component');\n    props.setName(userInput.name);\n    setUserInput(preV => {\n      return {};\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      value: userInput.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Click me Controlled Functional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ControlledFStateAndRef, \"c9K57xy2tGaiZ1YV0WedIjsIt1U=\");\n\n_c = ControlledFStateAndRef;\nexport default ControlledFStateAndRef;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledFStateAndRef\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useEffect,useRef,useState)/01-starting-setup/src/components/ControlledFStateAndRef.js"],"names":["React","useState","useEffect","useRef","ControlledFStateAndRef","props","userInput","setUserInput","name","Over6Chars","inputRef","current","focus","console","log","handleChange","event","target","value","handleSubmit","setName","preV"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAS;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC;AACvCO,IAAAA,IAAI,EAAC,EADkC;AAEvCC,IAAAA,UAAU,EAAE;AAF2B,GAAD,CAA1C;AAIA,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMC,YAAY,GAAGC,KAAK,IAAG;AACzBT,IAAAA,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAI;AACrBN,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACE,IAAtB,EAA6B,uCAA7B;AACAH,IAAAA,KAAK,CAACe,OAAN,CAAcd,SAAS,CAACE,IAAxB;AACAD,IAAAA,YAAY,CAACc,IAAI,IAAE;AACf,aAAO,EAAP;AACH,KAFW,CAAZ;AAGH,GAND;;AAOA,sBACI;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,GAAG,EAAEX,QAFT;AAGI,MAAA,KAAK,EAAEJ,SAAS,CAACE,IAHrB;AAII,MAAA,QAAQ,EAAEO;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CAjCD;;GAAMf,sB;;KAAAA,sB;AAmCN,eAAeA,sBAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\n\nconst ControlledFStateAndRef = (props)=>{\n    const [userInput, setUserInput] = useState({\n        name:'',\n        Over6Chars: false\n    })\n    const inputRef = useRef()\n    useEffect(()=>{\n        inputRef.current.focus()\n        console.log('destructured properly');\n    },[])\n\n    const handleChange = event =>{\n        setUserInput(event.target.value)\n    }\n\n    const handleSubmit = ()=>{\n        console.log(userInput.name , ' from functional controlled Component');\n        props.setName(userInput.name)\n        setUserInput(preV=>{\n            return {}\n        })\n    }\n    return (\n        <>\n            <input\n                type='text'\n                ref={inputRef}\n                value={userInput.name}\n                onChange={handleChange}\n            />\n            <button onClick={handleSubmit}>Click me Controlled Functional</button>\n        </>\n    )\n}\n\nexport default ControlledFStateAndRef"]},"metadata":{},"sourceType":"module"}