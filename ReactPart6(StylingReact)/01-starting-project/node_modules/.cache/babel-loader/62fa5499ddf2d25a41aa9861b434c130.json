{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart4(StylingReact)/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../UI/Button/Button'; // import './CourseInput.css';we dont need this anymore because we are using\n// styled components import and we styling them directly \n\nimport styled from 'styled-components'; // import Button2 from '../../UI/Button2';\n\nimport styles from './CourseInput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.form`\n\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color:${props => props.invalid ? 'salmon' : 'black'}\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 3px solid ${props => props.invalid ? 'yellow' : 'grey'};\n  background: ${props => props.invalid ? 'salmon' : 'transparent'};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n`;\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n    setEnteredValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['form-control']} invalid`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: enteredValue,\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) // how to add styles directly dynamically \n  // <form onSubmit={formSubmitHandler}>\n  //   <div className=\"form-control\">\n  //     <label style={{ color: !isValid? 'red':'black'}}>Course Goal</label>\n  //     <input type=\"text\" value={enteredValue} style={{ background: !isValid ? 'salmon' : 'transparent', borderColor: !isValid ? 'yellow' : 'black' }} onChange={goalInputChangeHandler}/>\n  //   </div>\n  //   <Button type=\"submit\">Add Goal</Button>\n  // </form>\n  ;\n};\n\n_s(CourseInput, \"AUO2tNbdIi2FkOc30/9bpmRRAjc=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart4(StylingReact)/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","styled","styles","FormControl","form","props","invalid","CourseInput","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUC,KAAK,IAAGA,KAAK,CAACC,OAAN,GAAe,QAAf,GAAyB,OAAQ;AACnD;AACA;AACA;AACA;AACA;AACA,sBAAsBD,KAAK,IAAGA,KAAK,CAACC,OAAN,GAAgB,QAAhB,GAA0B,MAAO;AAC/D,gBAAgBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,QAAhB,GAA2B,aAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;;AA6BA,MAAMC,WAAW,GAAGF,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAuBZ,QAAQ,CAAC,IAAD,CAArC;;AAEA,QAAMa,sBAAsB,GAAGC,KAAK,IAAI;AACtC,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAtC,EAAwC;AACtCN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GALD;;AAOA,QAAMG,iBAAiB,GAAGL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAGX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA6B,CAAhC,EAAkC;AAChCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AACDN,IAAAA,KAAK,CAACe,SAAN,CAAgBZ,YAAhB;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAES,iBAAhB;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAG,GAAEhB,MAAM,CAAC,cAAD,CAAiB,UAA1C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEM,YAA1B;AAAwC,QAAA,QAAQ,EAAEI;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBF;AAuBD,CA5CD;;GAAML,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\n// import './CourseInput.css';we dont need this anymore because we are using\n// styled components import and we styling them directly \nimport styled from 'styled-components'\n// import Button2 from '../../UI/Button2';\nimport styles from './CourseInput.module.css'\n\nconst FormControl = styled.form`\n\n  margin: 0.5rem 0;\n\n& label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 0.5rem;\n  color:${props=> props.invalid? 'salmon': 'black'}\n}\n\n& input {\n  display: block;\n  width: 100%;\n  border: 3px solid ${props=> props.invalid ? 'yellow': 'grey'};\n  background: ${props => props.invalid ? 'salmon' : 'transparent'};\n  font: inherit;\n  line-height: 1.5rem;\n  padding: 0 0.25rem;\n}\n\n& input:focus {\n  outline: none;\n  background: #fad0ec;\n  border-color: #8b005d;\n}\n\n`\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid ,setIsValid]= useState(true)\n\n  const goalInputChangeHandler = event => {\n    if(event.target.value.trim().length > 0){\n      setIsValid(true)\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if(enteredValue.trim().length===0){\n      setIsValid(false)\n      return;\n    }\n    props.onAddGoal(enteredValue);\n    setEnteredValue('')\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* adding class dynamically */}\n      {/* allows us to dynamically add styling if isValid is true add an empty string is false then add invalid class */}\n      {/* two ways of doing this */}\n      {/* <FormControl className={!isValid && 'invalid'}> */}\n      <div className={`${styles['form-control']} invalid`}>\n        <label>Course Goal</label>\n        <input type=\"text\" value={enteredValue} onChange={goalInputChangeHandler}/>\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n      {/* <Button2></Button2> */}\n    </form>\n\n    // how to add styles directly dynamically \n    // <form onSubmit={formSubmitHandler}>\n    //   <div className=\"form-control\">\n    //     <label style={{ color: !isValid? 'red':'black'}}>Course Goal</label>\n    //     <input type=\"text\" value={enteredValue} style={{ background: !isValid ? 'salmon' : 'transparent', borderColor: !isValid ? 'yellow' : 'black' }} onChange={goalInputChangeHandler}/>\n    //   </div>\n    //   <Button type=\"submit\">Add Goal</Button>\n    // </form>\n  );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}