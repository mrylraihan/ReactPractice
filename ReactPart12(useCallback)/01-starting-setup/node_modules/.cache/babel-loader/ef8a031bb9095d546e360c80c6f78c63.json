{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart12(useCallback)/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button';\nimport DemoOutput from './components/Demo/DemoOutPut';\nimport './App.css';\nimport JustInCase from './components/Demo/Justincase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log('APP Running');\n  const toggleParagraph = useCallback(() => {\n    // if relying on the previous state and using function form of updating \n    if (allowToggle) {\n      setShowParagraph(preV => !preV);\n    } // setShowParagraph(!showParagraph)\n\n  }, []);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(!allowToggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggle! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraph,\n      children: \"Toggle Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JustInCase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oMmVbNCu6cYtseCjmSJn6SxLyIg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart12(useCallback)/01-starting-setup/src/App.js"],"names":["React","useState","useCallback","Button","DemoOutput","JustInCase","App","showParagraph","setShowParagraph","allowToggle","setAllowToggle","console","log","toggleParagraph","preV","allowToggleHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAMC,eAAe,GAAGX,WAAW,CAAC,MAAK;AACvC;AACA,QAAGO,WAAH,EAAe;AACbD,MAAAA,gBAAgB,CAACM,IAAI,IAAE,CAACA,IAAR,CAAhB;AACD,KAJsC,CAKvC;;AACD,GANkC,EAMhC,EANgC,CAAnC;;AAQA,QAAMC,kBAAkB,GAAG,MAAI;AAC7BL,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA/BQP,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button'\nimport DemoOutput from './components/Demo/DemoOutPut';\nimport './App.css';\nimport JustInCase from './components/Demo/Justincase';\n\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false)\n  const [allowToggle, setAllowToggle] =useState(false)\n\n  console.log('APP Running');\n  \n  const toggleParagraph = useCallback(()=> {\n    // if relying on the previous state and using function form of updating \n    if(allowToggle){\n      setShowParagraph(preV=>!preV)\n    }\n    // setShowParagraph(!showParagraph)\n  }, []);\n  \n  const allowToggleHandler = ()=>{\n    setAllowToggle(!allowToggle)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={showParagraph} />\n      {/* {showParagraph && <p>This is new!</p>} */}\n\n      {/* or */}\n      {/* <Button onClick={()=>setShowParagraph(!showParagraph)}>Show Paragraph!</Button> */}\n      <Button onClick={allowToggleHandler}>Allow Toggle! </Button>\n      <Button onClick={toggleParagraph}>Toggle Paragraph!</Button>\n      <JustInCase/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}