{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPut.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchPut = () => {\n  _s();\n\n  const [pilotId, setIdPilot] = useState('');\n  const [gundam, setGundam] = useState('');\n  const [pilot, setPilot] = useState('');\n  const [gp, setGp] = useState(null);\n  const [singleGundam, setSingleGundam] = useState(null);\n  useEffect(() => {\n    if (gp) {\n      fetch(`http://localhost:4000/gundams/${gp.pilotId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          gundam: gp.gundam,\n          pilot: gp.pilot\n        })\n      }).then(res => res.json()).then(result => {\n        return setSingleGundam(result);\n      }).catch(console.error);\n    }\n  }, [gp]);\n\n  const submitHandler = () => {\n    setGp({\n      pilotId: pilotId,\n      gundam: gundam,\n      pilot: pilot\n    });\n    console.log({\n      gundam: gundam\n    });\n    setIdPilot('');\n    setGundam('');\n    setPilot('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pilotId\",\n      children: [\"Pilot Id :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"pilotId\",\n        value: pilotId,\n        onChange: e => setPilotI(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"gundam\",\n      children: [\"Gundam Name Edits :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"gundam\",\n        value: gundam,\n        onChange: e => setGundam(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pilot\",\n      children: [\"Pilot Name Edits :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pilot\",\n        value: pilot,\n        onChange: e => setPilot(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      children: \"Edit by ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchPut, \"m2VD4AaQNho7nxxUNk+1RWyS4tg=\");\n\n_c = FetchPut;\nexport default FetchPut;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchPut\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPut.jsx"],"names":["React","useEffect","useState","FetchPut","pilotId","setIdPilot","gundam","setGundam","pilot","setPilot","gp","setGp","singleGundam","setSingleGundam","fetch","method","headers","body","JSON","stringify","then","res","json","result","catch","console","error","submitHandler","log","e","setPilotI","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FetchPut = () => {\n    const [pilotId, setIdPilot] = useState('')\n    const [gundam, setGundam] = useState('')\n    const [pilot, setPilot] = useState('')\n    const [gp, setGp] = useState(null)\n    const [singleGundam, setSingleGundam] = useState(null)\n    useEffect(() => {\n        if (gp) {\n            fetch(`http://localhost:4000/gundams/${gp.pilotId}`,\n                {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({ gundam: gp.gundam , pilot:gp.pilot})\n                })\n                .then(res => res.json())\n                .then(result => {\n                    return setSingleGundam(result)\n                })\n                .catch(console.error)\n        }\n    }, [gp])\n    const submitHandler = () => {\n        setGp({ pilotId: pilotId, gundam: gundam , pilot: pilot})\n        console.log({ gundam: gundam })\n        setIdPilot('')\n        setGundam('')\n        setPilot('')\n    }\n    return (\n        <div >\n            <label htmlFor='pilotId'>Pilot Id :\n                <input type='number' id='pilotId' value={pilotId} onChange={(e => setPilotI(e.target.value))} />\n            </label>\n            <label htmlFor='gundam'>Gundam Name Edits :\n                <input type='text' id='gundam' value={gundam} onChange={(e => setGundam(e.target.value))} />\n            </label>\n            <label htmlFor='pilot'>Pilot Name Edits :\n                <input type='text' id='pilot' value={pilot} onChange={(e => setPilot(e.target.value))} />\n            </label>\n            <button onClick={submitHandler}>Edit by ID</button>\n            <h2>{singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''}</h2>\n        </div>\n    )\n}\n\nexport default FetchPut"]},"metadata":{},"sourceType":"module"}