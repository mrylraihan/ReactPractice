{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchAll.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FetchAll = () => {\n  _s();\n\n  const [allGundams, setGundams] = useState([]);\n  const [btnTrigger, setBtnTrigger] = useState(false);\n  useEffect(() => {\n    if (btnTrigger) {\n      fetch('http://localhost:4000/gundams').then(res => res.json()).then(res => {\n        console.log(res);\n        setGundams(res);\n        return;\n      }).catch(console.error);\n    } else {\n      setGundams([]);\n    }\n  }, [btnTrigger]);\n\n  const buttonHandler = () => {\n    setBtnTrigger(!btnTrigger);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: butt,\n      children: \"Get all Gundams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allGundams.length > 0 ? allGundams.map(ele => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${ele.pilot} : ${ele.gundam}`\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this);\n      }) : allGundams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FetchAll, \"fhejoLFD1oJHZV8vkYAK+YkDrLE=\");\n\n_c = FetchAll;\nexport default FetchAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchAll\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchAll.jsx"],"names":["React","useEffect","useState","FetchAll","allGundams","setGundams","btnTrigger","setBtnTrigger","fetch","then","res","json","console","log","catch","error","buttonHandler","butt","length","map","ele","pilot","gundam","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BH,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,UAAH,EAAc;AACVE,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMC,GAAG,IAAE;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAL,QAAAA,UAAU,CAACK,GAAD,CAAV;AACA;AACH,OAND,EAOCI,KAPD,CAOOF,OAAO,CAACG,KAPf;AAQH,KATD,MASK;AACDV,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GAbQ,EAaN,CAACC,UAAD,CAbM,CAAT;;AAeA,QAAMU,aAAa,GAAG,MAAI;AACtBT,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEW,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKb,UAAU,CAACc,MAAX,GAAkB,CAAlB,GAAoBd,UAAU,CAACe,GAAX,CAAeC,GAAG,IAAE;AACzC,4BAAO;AAAA,oBAAmB,GAAEA,GAAG,CAACC,KAAM,MAAKD,GAAG,CAACE,MAAO;AAA/C,WAASF,GAAG,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFwB,CAApB,GAEFnB;AAFH;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAQH,CA9BD;;GAAMD,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FetchAll = () => {\n    const [allGundams, setGundams] = useState([])\n    const [btnTrigger, setBtnTrigger] = useState(false)\n\n    useEffect(()=>{\n        if(btnTrigger){\n            fetch('http://localhost:4000/gundams')\n            .then(res=>res.json())\n            .then(res=>{\n                console.log(res);\n                setGundams(res)\n                return \n            })\n            .catch(console.error)\n        }else{\n            setGundams([])\n        }\n    }, [btnTrigger])\n\n    const buttonHandler = ()=>{\n        setBtnTrigger(!btnTrigger)\n    }\n    return (\n        <>\n            <button onClick={butt}>Get all Gundams</button>\n            <ul>{allGundams.length>0?allGundams.map(ele=>{\n                return <li key={ele.id}>{`${ele.pilot} : ${ele.gundam}`}</li>\n            }):allGundams}</ul>\n        </>\n    )\n}\n\nexport default FetchAll"]},"metadata":{},"sourceType":"module"}