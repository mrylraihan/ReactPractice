{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPatch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchPatch = () => {\n  _s();\n\n  const [pilotId, setPilot] = useState('');\n  const [gundam, setGundam] = useState('');\n  const [gp, setGp] = useState(null);\n  const [singleGundam, setSingleGundam] = useState(null);\n  useEffect(() => {\n    if (gp) {\n      fetch(`http://localhost:4000/gundams/${pilotId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(gp)\n      }).then(res => res.json()).then(result => {\n        return setSingleGundam(result);\n      }).catch(console.error);\n    }\n  }, [gp]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setGp({\n      gundam: gundam\n    });\n    console.log({\n      gundam: gundam\n    });\n    setPilot('');\n    setGundam('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pilot\",\n        children: [\"Pilot Id :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"name\",\n          value: pilotId,\n          onChange: e => setPilot(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"gundam\",\n        children: [\"Gundam Name Edits :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"gundam\",\n          value: gundam,\n          onChange: e => setGundam(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create your Mech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchPatch, \"VJIg0vCv3qqYlcI7DlFQpXNNoYs=\");\n\n_c = FetchPatch;\nexport default FetchPatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchPatch\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPatch.jsx"],"names":["React","useEffect","useState","FetchPatch","pilotId","setPilot","gundam","setGundam","gp","setGp","singleGundam","setSingleGundam","fetch","method","headers","body","JSON","stringify","then","res","json","result","catch","console","error","submitHandler","e","preventDefault","log","target","value","pilot"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,EAAJ,EAAQ;AACJI,MAAAA,KAAK,CAAE,iCAAgCR,OAAQ,EAA1C,EACJ;AACGS,QAAAA,MAAM,EAAE,OADX;AAEGC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFZ;AAKGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,EAAf;AALT,OADI,CAAL,CAQKU,IARL,CAQUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARjB,EASKF,IATL,CASUG,MAAM,IAAI;AACZ,eAAOV,eAAe,CAACU,MAAD,CAAtB;AACH,OAXL,EAYKC,KAZL,CAYWC,OAAO,CAACC,KAZnB;AAaH;AACJ,GAhBQ,EAgBN,CAAChB,EAAD,CAhBM,CAAT;;AAiBA,QAAMiB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEAlB,IAAAA,KAAK,CAAC;AAAEH,MAAAA,MAAM,EAAEA;AAAV,KAAD,CAAL;AACAiB,IAAAA,OAAO,CAACK,GAAR,CAAY;AAACtB,MAAAA,MAAM,EAAEA;AAAT,KAAZ;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAPD;;AAQA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEkB,aAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,8CACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAErB,OAAtC;AAA+C,UAAA,QAAQ,EAAGsB,CAAC,IAAIrB,QAAQ,CAACqB,CAAC,CAACG,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,uDACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,QAAtB;AAA+B,UAAA,KAAK,EAAExB,MAAtC;AAA8C,UAAA,QAAQ,EAAGoB,CAAC,IAAInB,SAAS,CAACmB,CAAC,CAACG,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA,gBAAKpB,YAAY,GAAI,GAAEA,YAAY,CAACqB,KAAM,MAAKrB,YAAY,CAACJ,MAAO,EAAlD,GAAsD;AAAvE;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5CD;;GAAMH,U;;KAAAA,U;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FetchPatch = () => {\n    const [pilotId, setPilot] = useState('')\n    const [gundam, setGundam] = useState('')\n    const [gp, setGp] = useState(null)\n    const [singleGundam, setSingleGundam] = useState(null)\n    useEffect(() => {\n        if (gp) {\n            fetch(`http://localhost:4000/gundams/${pilotId}`,\n             {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(gp)\n            })\n                .then(res => res.json())\n                .then(result => {\n                    return setSingleGundam(result)\n                })\n                .catch(console.error)\n        }\n    }, [gp])\n    const submitHandler = (e) => {\n        e.preventDefault()\n        \n        setGp({ gundam: gundam })\n        console.log({gundam: gundam })\n        setPilot('')\n        setGundam('')\n    }\n    return (\n        <div >\n            <form onSubmit={submitHandler}>\n                <label htmlFor='pilot'>Pilot Id :\n                    <input type='number' id='name' value={pilotId} onChange={(e => setPilot(e.target.value))} />\n                </label>\n                <label htmlFor='gundam'>Gundam Name Edits :\n                    <input type='text' id='gundam' value={gundam} onChange={(e => setGundam(e.target.value))} />\n                </label>\n                <button type='submit'>Create your Mech</button>\n            </form>\n            <h2>{singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''}</h2>\n        </div>\n    )\n}\n\nexport default FetchPatch"]},"metadata":{},"sourceType":"module"}