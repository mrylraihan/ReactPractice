{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchById.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchById = () => {\n  _s();\n\n  const [oneName, setData] = useState(null);\n  const [btnTrigger, setBtnTrigger] = useState(false);\n  const [name, setName] = useState('');\n  const [nameApi, setNameForApi] = useState('');\n  useEffect(() => {\n    if (btnTrigger) {\n      fetch(`http://localhost:4000/gundams/${nameApi}`).then(res => res.json()).then(result => {\n        console.log(result);\n        setData(result);\n        return;\n      }).catch(console.error);\n    } else {\n      setData({});\n    }\n  }, [btnTrigger, nameApi]);\n\n  const buttonHandler = () => {\n    setBtnTrigger(!btnTrigger);\n    setNameForApi(name);\n    setName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"what gundam id are you looking for!:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buttonHandler,\n      children: \"get Your Gundam by Id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: oneName.pilot ? `${oneName.pilot} : ${oneName.gundam}` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchById, \"dcurIhnKMDVhMR0lnQjYJsmBwj8=\");\n\n_c = FetchById;\nexport default FetchById;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchById\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchById.jsx"],"names":["React","useEffect","useState","FetchById","oneName","setData","btnTrigger","setBtnTrigger","name","setName","nameApi","setNameForApi","fetch","then","res","json","result","console","log","catch","error","buttonHandler","e","target","value","pilot","gundam"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBH,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,aAAV,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIK,UAAJ,EAAgB;AACZM,MAAAA,KAAK,CAAE,iCAAgCF,OAAQ,EAA1C,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAX,QAAAA,OAAO,CAACW,MAAD,CAAP;AACA;AACH,OANL,EAOKG,KAPL,CAOWF,OAAO,CAACG,KAPnB;AAQH,KATD,MASO;AACHf,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAbQ,EAaP,CAACC,UAAD,EAAaI,OAAb,CAbO,CAAT;;AAeA,QAAMW,aAAa,GAAE,MAAI;AACrBd,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAK,IAAAA,aAAa,CAACH,IAAD,CAAb;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAJD;;AAKA,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA,sEAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAED,IAAtC;AAA4C,QAAA,QAAQ,EAAEc,CAAC,IAAEb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,OAAO,EAAEH,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAKjB,OAAO,CAACqB,KAAR,GAAe,GAAErB,OAAO,CAACqB,KAAM,MAAKrB,OAAO,CAACsB,MAAO,EAAnD,GAAqD;AAA1D;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApCD;;GAAMvB,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FetchById = () => {\n    const [oneName, setData] = useState(null)\n    const [btnTrigger, setBtnTrigger] = useState(false)\n    const [name, setName] = useState('')\n    const [nameApi, setNameForApi] = useState('')\n\n    useEffect(()=>{\n        if (btnTrigger) {\n            fetch(`http://localhost:4000/gundams/${nameApi}`)\n                .then(res => res.json())\n                .then(result => {\n                    console.log(result);\n                    setData(result)\n                    return\n                })\n                .catch(console.error)\n        } else {\n            setData({})\n        }\n    },[btnTrigger, nameApi])\n\n    const buttonHandler =()=>{\n        setBtnTrigger(!btnTrigger)\n        setNameForApi(name)\n        setName('')\n    }\n    return (\n        <div>\n            <label htmlFor=\"name\">\n                what gundam id are you looking for!:\n                <input type=\"number\" id='name' value={name} onChange={e=>setName(e.target.value)}/>\n            </label>\n            <button onClick={buttonHandler}>get Your Gundam by Id</button>\n            <h2>{oneName.pilot?`${oneName.pilot} : ${oneName.gundam}`:''}</h2>\n        </div>\n    )\n}\n\nexport default FetchById"]},"metadata":{},"sourceType":"module"}