{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPatch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchPatch = () => {\n  _s();\n\n  const [pilotId, setPilot] = useState('');\n  const [gundam, setGundam] = useState('');\n  const [gp, setGp] = useState(null);\n  const [singleGundam, setSingleGundam] = useState(null);\n  useEffect(() => {\n    if (gp) {\n      fetch(`http://localhost:4000/gundams/${gp.pil}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(gp)\n      }).then(res => res.json()).then(result => {\n        return setSingleGundam(result);\n      }).catch(console.error);\n    }\n  }, [gp]);\n\n  const submitHandler = () => {\n    setGp({\n      pilotId: pilotId,\n      gundam: gundam\n    });\n    console.log({\n      gundam: gundam\n    });\n    setPilot('');\n    setGundam('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pilot\",\n      children: [\"Pilot Id :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"pilot\",\n        value: pilotId,\n        onChange: e => setPilot(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"gundam\",\n      children: [\"Gundam Name Edits :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"gundam\",\n        value: gundam,\n        onChange: e => setGundam(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      children: \"Create your Mech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchPatch, \"VJIg0vCv3qqYlcI7DlFQpXNNoYs=\");\n\n_c = FetchPatch;\nexport default FetchPatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchPatch\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(FetchCrudMethods)/GundamCrudProject/src/components/FetchPatch.jsx"],"names":["React","useEffect","useState","FetchPatch","pilotId","setPilot","gundam","setGundam","gp","setGp","singleGundam","setSingleGundam","fetch","pil","method","headers","body","JSON","stringify","then","res","json","result","catch","console","error","submitHandler","log","e","target","value","pilot"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,EAAJ,EAAQ;AACJI,MAAAA,KAAK,CAAE,iCAAgCJ,EAAE,CAACK,GAAI,EAAzC,EACJ;AACGC,QAAAA,MAAM,EAAE,OADX;AAEGC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFZ;AAKGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,EAAf;AALT,OADI,CAAL,CAQKW,IARL,CAQUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARjB,EASKF,IATL,CASUG,MAAM,IAAI;AACZ,eAAOX,eAAe,CAACW,MAAD,CAAtB;AACH,OAXL,EAYKC,KAZL,CAYWC,OAAO,CAACC,KAZnB;AAaH;AACJ,GAhBQ,EAgBN,CAACjB,EAAD,CAhBM,CAAT;;AAiBA,QAAMkB,aAAa,GAAG,MAAM;AACxBjB,IAAAA,KAAK,CAAC;AAAEL,MAAAA,OAAO,EAACA,OAAV;AAAmBE,MAAAA,MAAM,EAAEA;AAA3B,KAAD,CAAL;AACAkB,IAAAA,OAAO,CAACG,GAAR,CAAY;AAACrB,MAAAA,MAAM,EAAEA;AAAT,KAAZ;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GALD;;AAMA,sBACI;AAAA,4BACQ;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA,4CACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAEH,OAAvC;AAAgD,QAAA,QAAQ,EAAGwB,CAAC,IAAIvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA,qDACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,KAAK,EAAExB,MAAtC;AAA8C,QAAA,QAAQ,EAAGsB,CAAC,IAAIrB,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAOI;AAAQ,MAAA,OAAO,EAAEJ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,gBAAKhB,YAAY,GAAI,GAAEA,YAAY,CAACqB,KAAM,MAAKrB,YAAY,CAACJ,MAAO,EAAlD,GAAsD;AAAvE;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxCD;;GAAMH,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst FetchPatch = () => {\n    const [pilotId, setPilot] = useState('')\n    const [gundam, setGundam] = useState('')\n    const [gp, setGp] = useState(null)\n    const [singleGundam, setSingleGundam] = useState(null)\n    useEffect(() => {\n        if (gp) {\n            fetch(`http://localhost:4000/gundams/${gp.pil}`,\n             {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(gp)\n            })\n                .then(res => res.json())\n                .then(result => {\n                    return setSingleGundam(result)\n                })\n                .catch(console.error)\n        }\n    }, [gp])\n    const submitHandler = () => {\n        setGp({ pilotId:pilotId, gundam: gundam })\n        console.log({gundam: gundam })\n        setPilot('')\n        setGundam('')\n    }\n    return (\n        <div >\n                <label htmlFor='pilot'>Pilot Id :\n                    <input type='number' id='pilot' value={pilotId} onChange={(e => setPilot(e.target.value))} />\n                </label>\n                <label htmlFor='gundam'>Gundam Name Edits :\n                    <input type='text' id='gundam' value={gundam} onChange={(e => setGundam(e.target.value))} />\n                </label>\n            <button onClick={submitHandler}>Create your Mech</button>\n            <h2>{singleGundam ? `${singleGundam.pilot} : ${singleGundam.gundam}` : ''}</h2>\n        </div>\n    )\n}\n\nexport default FetchPatch"]},"metadata":{},"sourceType":"module"}