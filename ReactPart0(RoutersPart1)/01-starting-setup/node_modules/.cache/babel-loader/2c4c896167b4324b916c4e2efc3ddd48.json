{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(Pagination)/01-starting-setup/src/components/CustomizedTables.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\"; // import TablePaginationTest from \"./TablePaginationTest\";\n// import TablePagination from \"@material-ui/core/TablePagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst data = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9), createData(\"Gingerbread2\", 356, 16.0, 49, 3.9), createData(\"Gingerbread3\", 356, 16.0, 49, 3.9), createData(\"Gingerbread4\", 356, 16.0, 49, 3.9), createData(\"Gingerbread5\", 356, 16.0, 49, 3.9), createData(\"Gingerbread6\", 356, 16.0, 49, 3.9), createData(\"Gingerbread7\", 356, 16.0, 49, 3.9), createData(\"Gingerbread8\", 356, 16.0, 49, 3.9), createData(\"Gingerbread9\", 356, 16.0, 49, 3.9), createData(\"Gingerbread10\", 356, 16.0, 49, 3.9), createData(\"Gingerbread11\", 356, 16.0, 49, 3.9), createData(\"Gingerbread12\", 356, 16.0, 49, 3.9), createData(\"Gingerbread13\", 356, 16.0, 49, 3.9)];\nexport default function CustomizedTables() {\n  _s();\n\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  const data = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9), createData(\"Gingerbread2\", 356, 16.0, 49, 3.9), createData(\"Gingerbread3\", 356, 16.0, 49, 3.9), createData(\"Gingerbread4\", 356, 16.0, 49, 3.9), createData(\"Gingerbread5\", 356, 16.0, 49, 3.9), createData(\"Gingerbread6\", 356, 16.0, 49, 3.9), createData(\"Gingerbread7\", 356, 16.0, 49, 3.9), createData(\"Gingerbread8\", 356, 16.0, 49, 3.9), createData(\"Gingerbread9\", 356, 16.0, 49, 3.9), createData(\"Gingerbread10\", 356, 16.0, 49, 3.9), createData(\"Gingerbread11\", 356, 16.0, 49, 3.9), createData(\"Gingerbread12\", 356, 16.0, 49, 3.9), createData(\"Gingerbread13\", 356, 16.0, 49, 3.9)];\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n  const headers = data.reduce((output, entry) => {\n    const result = output;\n    Object.keys(entry).forEach(key => {\n      if (!result.includes(key)) result.push(key);\n    });\n    return result;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headers.map(key => {\n            return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: // Convert camelcased values to uppercased values to be used as\n              // dynamic headers\n              key.replace(/([A-Z])/g, \" $1\").replace(/^./, function (str) {\n                return str.toUpperCase();\n              })\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.slice(page * rowsPerPage, page + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: headers.map(key => {\n            return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row[key]\n            }, `${row.name}-${key}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this);\n          })\n        }, row.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedTables, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedTables\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(Pagination)/01-starting-setup/src/components/CustomizedTables.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","data","CustomizedTables","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","headers","reduce","output","entry","result","Object","keys","forEach","key","includes","push","map","replace","str","toUpperCase","slice","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n// import TablePaginationTest from \"./TablePaginationTest\";\n// import TablePagination from \"@material-ui/core/TablePagination\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        \"&:nth-of-type(odd)\": {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 700,\n    },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst data = [\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread2\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread3\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread4\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread5\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread6\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread7\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread8\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread9\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread10\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread11\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread12\", 356, 16.0, 49, 3.9),\n    createData(\"Gingerbread13\", 356, 16.0, 49, 3.9)\n];\n\nexport default function CustomizedTables() {\n    function createData(name, calories, fat, carbs, protein) {\n        return { name, calories, fat, carbs, protein };\n    }\n\n    const data = [\n        createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n        createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n        createData(\"Eclair\", 262, 16.0, 24, 6.0),\n        createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n        createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread2\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread3\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread4\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread5\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread6\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread7\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread8\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread9\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread10\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread11\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread12\", 356, 16.0, 49, 3.9),\n        createData(\"Gingerbread13\", 356, 16.0, 49, 3.9)\n    ];\n    \n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    const emptyRows =\n        rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    const headers = data.reduce((output, entry) => {\n        const result = output;\n        Object.keys(entry).forEach((key) => {\n            if (!result.includes(key)) result.push(key);\n        });\n        return result;\n    }, []);\n\n    return (\n        <TableContainer component={Paper}>\n            {/* <TablePagination rowsPerPageOptions={[10, 50]} /> */}\n            {/* <TablePaginationTest rowsPerPageOptions={[10, 50, { value: -1, label: 'All' }]} /> */}\n\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        {headers.map((key) => {\n                            return (\n                                <StyledTableCell key={key}>\n                                    {\n                                        // Convert camelcased values to uppercased values to be used as\n                                        // dynamic headers\n                                        key\n                                            .replace(/([A-Z])/g, \" $1\")\n                                            .replace(/^./, function (str) {\n                                                return str.toUpperCase();\n                                            })\n                                    }\n                                </StyledTableCell>\n                            );\n                        })}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.slice(page * rowsPerPage, page + rowsPerPage)\n                    .map((row) => (\n                        <StyledTableRow key={row.name}>\n                            {headers.map((key) => {\n                                return (\n                                    <StyledTableCell key={`${row.name}-${key}`}>\n                                        {row[key]}\n                                    </StyledTableCell>\n                                );\n                            })}\n                        </StyledTableRow>\n                    ))}\n                </TableBody>\n                {/* <TableBody>\n          {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPageOptions).map((row) => (\n            <StyledTableRow key={row.name}>\n              {headers.map((key) => {\n                return (\n                  <StyledTableCell key={`${row.name}-${key}`}>\n                    {row[key]}\n                  </StyledTableCell>\n                );\n              })}\n            </StyledTableRow>\n          ))}\n        </TableBody> */}\n            </Table>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </TableContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}