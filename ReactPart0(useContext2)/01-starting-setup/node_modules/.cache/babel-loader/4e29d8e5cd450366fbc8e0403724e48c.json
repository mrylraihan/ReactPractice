{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart3(ReactBasics)/CleanedUpReactProject/01-starting-setup/src/components/TestArray.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst arrayOfObjects = [{\n  coffee: \"Americano\",\n  size: \"Medium\"\n}, {\n  coffee: \"Espresso\",\n  size: \"Single\"\n}];\nconst arrayNested = [{\n  family: 'Stark',\n  nums: [1, 2, 3, 4]\n}, {\n  family: 'Nark',\n  nums: [1, 2, 3, 4]\n}];\n\nconst TestArray = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: arrayOfObjects.map(cof => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"The Coffee Type is \", cof.coffee, \" and the size is: \", cof.size]\n  }, cof.size, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this))\n}, void 0, false);\n\n_c = TestArray;\nexport default TestArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestArray\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart3(ReactBasics)/CleanedUpReactProject/01-starting-setup/src/components/TestArray.js"],"names":["arrayOfObjects","coffee","size","arrayNested","family","nums","TestArray","map","cof"],"mappings":";;;AAAA,MAAMA,cAAc,GAAG,CACrB;AAAEC,EAAAA,MAAM,EAAE,WAAV;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CADqB,EAErB;AAAED,EAAAA,MAAM,EAAE,UAAV;AAAsBC,EAAAA,IAAI,EAAE;AAA5B,CAFqB,CAAvB;AAKA,MAAMC,WAAW,GAAG,CAChB;AAACC,EAAAA,MAAM,EAAC,OAAR;AAAiBC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP;AAAvB,CADgB,EAEhB;AAACD,EAAAA,MAAM,EAAC,MAAR;AAAgBC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP;AAAtB,CAFgB,CAApB;;AAMA,MAAMC,SAAS,GAAG,mBACd;AAAA,YACGN,cAAc,CAACO,GAAf,CAAoBC,GAAD,iBAClB;AAAA,sCAAuCA,GAAG,CAACP,MAA3C,wBAAqEO,GAAG,CAACN,IAAzE;AAAA,KAASM,GAAG,CAACN,IAAb;AAAA;AAAA;AAAA;AAAA,UADD;AADH,iBADJ;;KAAMI,S;AAQN,eAAeA,SAAf","sourcesContent":["const arrayOfObjects = [\n  { coffee: \"Americano\", size: \"Medium\" },\n  { coffee: \"Espresso\", size: \"Single\" },\n];\n\nconst arrayNested = [\n    {family:'Stark', nums :[1,2,3,4]},\n    {family:'Nark', nums :[1,2,3,4]},\n];\n\n\nconst TestArray = () =>(\n    <>\n      {arrayOfObjects.map((cof) => (\n        <li key={cof.size}>The Coffee Type is {cof.coffee} and the size is: {cof.size}</li>\n      ))}\n    </>\n)\n\nexport default TestArray"]},"metadata":{},"sourceType":"module"}