{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseReducerSeeingHowitWorks)/01-starting-project 5/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button'; // we create this outside of the component because we wont need any data thats generated from the actual component, so the reducer function can be created outside of the scope of the component function, all the data required for the reducer function will passed in by react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: action.val,\n      isValid: action.value.length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); // useReducer for email                       reducerFunction, initial value\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  }); // useEffect(()=>{\n  //   console.log('In useEffect');\n  //   const identifier = setTimeout(()=>{\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //     console.log('in timer');\n  //   }, 500)\n  //   return ()=>{console.log('Clean up!');\n  //   clearTimeout(identifier)\n  // }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.value.length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 4);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 4);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"bjZAQaJfGXsOVt+e0LNyNbatFUw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseReducerSeeingHowitWorks)/01-starting-project 5/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","length","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","trim","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n// we create this outside of the component because we wont need any data thats generated from the actual component, so the reducer function can be created outside of the scope of the component function, all the data required for the reducer function will passed in by react\nconst emailReducer =(state, action)=>{\n  if(action.type === 'USER_INPUT'){\n    return {value: action.val, isValid: action.val.includes('@')}\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value: state.value, isValid : state.value.includes('@')}\n  }\n  return {value: '', isValid: false}\n};\n\nconst passwordReducer = (state, action)=>{\n  if(action.type === 'USER_INPUT'){\n    return {value: action.val, isValid: action.val.length > 6}\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return { value: action.val, isValid: action.value.length > 6 }\n  }\n  return {value:'', isValid: false}\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // useReducer for email                       reducerFunction, initial value\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: false })\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, { value: '', isValid: false })\n\n  // useEffect(()=>{\n  //   console.log('In useEffect');\n  //   const identifier = setTimeout(()=>{\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //     console.log('in timer');\n  //   }, 500)\n  //   return ()=>{console.log('Clean up!');\n  //   clearTimeout(identifier)\n  // }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val : event.target.value})\n  \n      setFormIsValid(\n        event.target.value.includes('@') && passwordState.value.length > 6\n      )\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n    \n    setFormIsValid(\n        emailState.isValid && event.target.value.trim().length > 4\n      );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 4);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}