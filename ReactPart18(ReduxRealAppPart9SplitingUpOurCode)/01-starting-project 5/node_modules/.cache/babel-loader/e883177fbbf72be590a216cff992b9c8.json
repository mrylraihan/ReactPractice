{"ast":null,"code":"// create a store\n// create a ruducer\n// then dont subscribe though we will \n// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit'; // import redux from 'redux'\n\nconst initialLoginState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialLoginState,\n  reducers: {\n    login(state) {\n      return { ...state,\n        isAuthenticated: true\n      };\n    },\n\n    logOut(state) {\n      return { ...state,\n        isAuthenticated: false\n      };\n    }\n\n  }\n}); // const countReducer = (\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  } //if only one this is fine \n  //if multiple \n  // reducer:{counter:counterSlice.reducer, etc:etc}//basically a map of reducers\n\n}); // we need ot export this to provide the store to the react app \n\nexport const countActions = counterSlice.actions; //so we can dispatch actions\n\nexport const authActions = authSlice.actions;\nexport default store; // now where do we import our store to use it","map":{"version":3,"names":["createSlice","configureStore","initialLoginState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logOut","store","reducer","counter","counterSlice","auth","countActions","actions","authActions"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart18(ReduxRealAppPart9SplitingUpOurCode)/01-starting-project 5/src/store/index.js"],"sourcesContent":["// create a store\n// create a ruducer\n// then dont subscribe though we will \n// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\n// import redux from 'redux'\n\n\nconst initialLoginState = {\n    isAuthenticated : false\n}\n\nconst authSlice = createSlice({\n    name:'authentication',\n    initialState: initialLoginState,\n    reducers:{\n        login(state){\n            return {...state, isAuthenticated: true}\n        },\n        logOut(state){\n            return {...state, isAuthenticated: false }\n        }\n    }\n})\n\n// const countReducer = (\nconst store = configureStore({\n    reducer: {counter: counterSlice.reducer,\n              auth: authSlice.reducer}//if only one this is fine \n    //if multiple \n    // reducer:{counter:counterSlice.reducer, etc:etc}//basically a map of reducers\n})\n\n// we need ot export this to provide the store to the react app \nexport const countActions = counterSlice.actions//so we can dispatch actions\nexport const authActions = authSlice.actions\nexport default store;\n// now where do we import our store to use it"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CACA;;AAGA,MAAMC,iBAAiB,GAAG;EACtBC,eAAe,EAAG;AADI,CAA1B;AAIA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,gBADqB;EAE1BC,YAAY,EAAEJ,iBAFY;EAG1BK,QAAQ,EAAC;IACLC,KAAK,CAACC,KAAD,EAAO;MACR,OAAO,EAAC,GAAGA,KAAJ;QAAWN,eAAe,EAAE;MAA5B,CAAP;IACH,CAHI;;IAILO,MAAM,CAACD,KAAD,EAAO;MACT,OAAO,EAAC,GAAGA,KAAJ;QAAWN,eAAe,EAAE;MAA5B,CAAP;IACH;;EANI;AAHiB,CAAD,CAA7B,C,CAaA;;AACA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAE;IAACC,OAAO,EAAEC,YAAY,CAACF,OAAvB;IACCG,IAAI,EAAEX,SAAS,CAACQ;EADjB,CADgB,CAES;EAClC;EACA;;AAJyB,CAAD,CAA5B,C,CAOA;;AACA,OAAO,MAAMI,YAAY,GAAGF,YAAY,CAACG,OAAlC,C,CAAyC;;AAChD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAA9B;AACP,eAAeN,KAAf,C,CACA"},"metadata":{},"sourceType":"module"}