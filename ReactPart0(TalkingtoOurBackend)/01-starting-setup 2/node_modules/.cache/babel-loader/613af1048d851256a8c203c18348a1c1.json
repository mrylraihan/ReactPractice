{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(TalkingtoOurBackend)/01-starting-setup 2/src/components/FETCH/FetchingAll.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchingAll = () => {\n  _s();\n\n  const [allGundams, setData] = useState([]);\n  const [btnTrigger, setBtnTrigger] = useState(false);\n  useEffect(() => {\n    if (btnTrigger) {\n      const res = fetch(`http://localhost:4000/gundams/`);\n      res.then(res => res.json()).then(result => {\n        console.log();\n        setData(result);\n      });\n    } else {\n      setData([]);\n    }\n  }, [btnTrigger]);\n\n  const buttonHandler = () => {\n    setBtnTrigger(!btnTrigger);\n  };\n\n  const gundamList = allGundams.map(ele => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"Pilot: \", ele.pilot, \", Gundam: \", ele.gundam]\n  }, ele.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: buttonHandler,\n      children: \"Get All Gundams from our backend!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: gundamList ? gundamList : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchingAll, \"YipStuJ9KVXhc5EiVlV2JuqleFM=\");\n\n_c = FetchingAll;\nexport default FetchingAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchingAll\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(TalkingtoOurBackend)/01-starting-setup 2/src/components/FETCH/FetchingAll.jsx"],"names":["React","useEffect","useState","Button","FetchingAll","allGundams","setData","btnTrigger","setBtnTrigger","res","fetch","then","json","result","console","log","buttonHandler","gundamList","map","ele","pilot","gundam","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,OAAb,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA6BN,QAAQ,CAAC,KAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGM,UAAH,EAAc;AACV,YAAME,GAAG,GAAGC,KAAK,CAAE,gCAAF,CAAjB;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASF,GAAG,IAAEA,GAAG,CAACG,IAAJ,EAAd,EACCD,IADD,CACME,MAAM,IAAE;AACVC,QAAAA,OAAO,CAACC,GAAR;AACAT,QAAAA,OAAO,CAACO,MAAD,CAAP;AACH,OAJD;AAKH,KAPD,MAOK;AACDP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAXQ,EAWP,CAACC,UAAD,CAXO,CAAT;;AAaA,QAAMS,aAAa,GAAG,MAAI;AACtBR,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD;;AAGA,QAAMU,UAAU,GAAGZ,UAAU,CAACa,GAAX,CAAeC,GAAG,iBAAE;AAAA,0BAAyBA,GAAG,CAACC,KAA7B,gBAA8CD,GAAG,CAACE,MAAlD;AAAA,KAASF,GAAG,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,UAApB,CAAnB;AACA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKC,UAAU,GAACA,UAAD,GAAY;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;GAAMb,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Button from '../UI/Button/Button'\nconst FetchingAll = () => {\n    const [allGundams, setData] = useState([])\n    const [btnTrigger, setBtnTrigger]= useState(false)\n\n    useEffect(()=>{\n        if(btnTrigger){\n            const res = fetch(`http://localhost:4000/gundams/`)\n            res.then(res=>res.json())\n            .then(result=>{\n                console.log();\n                setData(result)\n            })\n        }else{\n            setData([])\n        }\n    },[btnTrigger])\n\n    const buttonHandler = ()=>{\n        setBtnTrigger(!btnTrigger)\n    }\n    const gundamList = allGundams.map(ele=><li key={ele.id}>Pilot: {ele.pilot}, Gundam: {ele.gundam}</li>)\n    return (\n        <div>\n            <Button onClick={buttonHandler}>Get All Gundams from our backend!</Button>\n            <ul>{gundamList?gundamList:''}</ul>\n        </div>\n    )\n}\n\nexport default FetchingAll"]},"metadata":{},"sourceType":"module"}