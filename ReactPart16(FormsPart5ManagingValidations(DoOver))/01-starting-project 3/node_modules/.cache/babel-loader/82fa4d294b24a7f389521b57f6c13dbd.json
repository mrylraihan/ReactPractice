{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart4RefactoringCodeDuplication(DoOver))/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // Validating opn blur meaning when the input looses focus \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(''); //working with onChange meaning every key stroke \n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }; // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    console.log(enteredName); //Only when the form is submitted it will log the state value\n\n    setEnteredName(''); //resetting the enteredName state \n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"you dont have anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart4RefactoringCodeDuplication(DoOver))/01-starting-project 3/src/components/SimpleInput.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// Validating opn blur meaning when the input looses focus \n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('') //working with onChange meaning every key stroke \n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n const enteredNameIsValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n    \n  }\n\n  // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n  const nameInputBlurHandler=()=>{\n    setEnteredNameTouched(true)\n \n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault()\n    setEnteredNameTouched(true)\n   \n      console.log(enteredName);//Only when the form is submitted it will log the state value\n      setEnteredName('')//resetting the enteredName state \n    \n\n  }\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n      </div>\n      {nameInputIsInvalid && <p className='error-text'>you dont have anything</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAD6B,CACsB;;EACnD,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EAED,MAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;;EAEC,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;IACtCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EAED,CAHD,CAN6B,CAW7B;;;EACA,MAAMC,oBAAoB,GAAC,MAAI;IAC7BP,qBAAqB,CAAC,IAAD,CAArB;EAED,CAHD;;EAIA,MAAMQ,qBAAqB,GAAGJ,KAAK,IAAI;IACrCA,KAAK,CAACK,cAAN;IACAT,qBAAqB,CAAC,IAAD,CAArB;IAEEU,OAAO,CAACC,GAAR,CAAYd,WAAZ,EAJmC,CAIV;;IACzBC,cAAc,CAAC,EAAD,CAAd,CALmC,CAKjB;EAGrB,CARD;;EAUA,MAAMc,kBAAkB,GAAG,CAACX,kBAAD,IAAuBF,kBAAlD;EACA,MAAMc,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EAEA,oBACE;IAAM,QAAQ,EAAEJ,qBAAhB;IAAA,wBAEE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA6B,QAAQ,EAAEV,sBAAvC;QAA+D,KAAK,EAAEN,WAAtE;QAAmF,MAAM,EAAEU;MAA3F;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAMGK,kBAAkB,iBAAI;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANzB,eAOE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA1CD;;GAAMjB,W;;KAAAA,W;AA4CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}