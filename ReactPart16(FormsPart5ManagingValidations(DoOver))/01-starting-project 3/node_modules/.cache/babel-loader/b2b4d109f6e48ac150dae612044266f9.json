{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1useReforuseState(DoOver))/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(''); //working with onChange meaning every key stroke \n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }; // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n\n\n  useEffect(() => {\n    const namer = 'Wallie';\n  }, []);\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(enteredName); //Only when the form is submitted it will log the state value\n\n    setEnteredName(''); //resetting the enteredName state \n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //Only when the form is submitted it will log the ref value\n\n    nameInputRef.current.value = ''; //resetting the nameInputRef value \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"eJueGZMiwo+GutmE++GfqZtFh5o=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameInputChangeHandler","event","target","value","namer","formSubmissionHandler","preventDefault","console","log","enteredValue","current"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1useReforuseState(DoOver))/01-starting-project 3/src/components/SimpleInput.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('') //working with onChange meaning every key stroke \n\n  const nameInputChangeHandler = event =>{\n    setEnteredName(event.target.value)\n  }\n\n// console.log(enteredName);//will log event time the state changes because the component is getting rerendered \nuseEffect(()=>{\nconst namer = 'Wallie'\n},[])\n  const formSubmissionHandler = event =>{\n    event.preventDefault()\n    console.log(enteredName);//Only when the form is submitted it will log the state value\n    setEnteredName('')//resetting the enteredName state \n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue);//Only when the form is submitted it will log the ref value\n    nameInputRef.current.value = ''//resetting the nameInputRef value \n  }\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <h1>{}</h1>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} ref={nameInputRef}/>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAEsB;;EAEnD,MAAMM,sBAAsB,GAAGC,KAAK,IAAG;IACrCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD,CAJ6B,CAQ/B;;;EACAX,SAAS,CAAC,MAAI;IACd,MAAMY,KAAK,GAAG,QAAd;EACC,CAFQ,EAEP,EAFO,CAAT;;EAGE,MAAMC,qBAAqB,GAAGJ,KAAK,IAAG;IACpCA,KAAK,CAACK,cAAN;IACAC,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAFoC,CAEX;;IACzBC,cAAc,CAAC,EAAD,CAAd,CAHoC,CAGlB;;IAClB,MAAMU,YAAY,GAAGZ,YAAY,CAACa,OAAb,CAAqBP,KAA1C;IACAI,OAAO,CAACC,GAAR,CAAYC,YAAZ,EALoC,CAKV;;IAC1BZ,YAAY,CAACa,OAAb,CAAqBP,KAArB,GAA6B,EAA7B,CANoC,CAML;EAChC,CAPD;;EAQA,oBACE;IAAM,QAAQ,EAAEE,qBAAhB;IAAA,wBACE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA6B,QAAQ,EAAEL,sBAAvC;QAA+D,KAAK,EAAEF,WAAtE;QAAmF,GAAG,EAAED;MAAxF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAhCD;;GAAMF,W;;KAAAA,W;AAkCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}