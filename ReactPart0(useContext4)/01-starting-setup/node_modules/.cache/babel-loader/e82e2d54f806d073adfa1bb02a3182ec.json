{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(PersonalPractice)/01-starting-setup/src/components/Test1.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test1 = props => {\n  let num = 0;\n  const listStuff = props.stuff.stufflist.map(ele => {\n    num;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: ele\n    }, ++num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.stuff.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: listStuff\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Test1;\nexport default Test1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test1\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(PersonalPractice)/01-starting-setup/src/components/Test1.js"],"names":["Test1","props","num","listStuff","stuff","stufflist","map","ele","title"],"mappings":";;;;AACA,MAAMA,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,GAAG,GAAG,CAAV;AACA,QAAMC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYC,SAAZ,CAAsBC,GAAtB,CAA0BC,GAAG,IAAG;AAC9CL,IAAAA,GAAG;AACH,wBAAO;AAAA,gBAAiBK;AAAjB,OAAS,EAAEL,GAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AAAkC,GAFpB,CAAlB;AAGA,sBACI;AAAA,2BACI;AAAA,8BACA;AAAA,kBAAKD,KAAK,CAACG,KAAN,CAAYI;AAAjB;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAA,kBAAGL;AAAH,uBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAQH,CAbD;;KAAMH,K;AAcN,eAAeA,KAAf","sourcesContent":["\nconst Test1 = (props) => {\n    let num = 0\n    const listStuff = props.stuff.stufflist.map(ele =>{\n        num\n        return <li key={++num}>{ele}</li>})\n    return (\n        <>\n            <ul>\n            <h4>{props.stuff.title}</h4>\n                <>{listStuff}</>\n            </ul>\n        </>\n    )\n}\nexport default Test1"]},"metadata":{},"sourceType":"module"}