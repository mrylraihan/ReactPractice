{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(API-Pratice)/01-starting-setup/src/components/KQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getKanyeQuote } from \"../api/apiCalls\"; // import axios from \"axios\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StarShip = _ref => {\n  _s();\n\n  let {\n    quote,\n    setQuote\n  } = _ref;\n  useEffect(() => {\n    console.log('useEffect Working'); // this will render the api cal for the first load and assign the state what it was returned which is why we see the first returned api stuff on the screen\n\n    const fetchData = async () => {\n      try {\n        const res = await getKanyeQuote(); //method that does api call\n        // const res = await axios.get('https://api.kanye.rest') or we could have dont it this way \n\n        console.log(res);\n        console.log(res.data);\n        setQuote(res.data.quote);\n      } catch (error) {\n        setQuote('Something went wrong!');\n      }\n    };\n\n    fetchData();\n  }, []); //no dependencies so it only runs once then after that its up to the click to change the state \n\n  const gettingData = () => {\n    const fetchData = async () => {\n      try {\n        const res = await getKanyeQuote(); //method that does api call\n        // const res = await axios.get('https://api.kanye.rest') or we could have dont it this way \n\n        console.log(res);\n        console.log(res.data);\n        setQuote(res.data.quote);\n      } catch (error) {\n        setQuote('Something went wrong!');\n      }\n    };\n\n    fetchData();\n  };\n\n  const getNewQuote = () => gettingData();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNewQuote,\n      children: \"get Kanye Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StarShip, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StarShip;\nexport default StarShip;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarShip\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(API-Pratice)/01-starting-setup/src/components/KQuote.js"],"names":["React","useEffect","getKanyeQuote","StarShip","quote","setQuote","console","log","fetchData","res","data","error","gettingData","getNewQuote"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,iBAA9B,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAoB;AAElCJ,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADU,CAEV;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMP,aAAa,EAA/B,CADA,CACiC;AACjC;;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,IAAhB;AACAL,QAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASN,KAAV,CAAR;AACH,OAND,CAME,OAAOO,KAAP,EAAc;AACZN,QAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;AACJ,KAVD;;AAWAG,IAAAA,SAAS;AACZ,GAfQ,EAeN,EAfM,CAAT,CAFkC,CAiB5B;;AAEN,QAAMI,WAAW,GAAE,MAAI;AACnB,UAAMJ,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMP,aAAa,EAA/B,CADA,CACiC;AACjC;;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,IAAhB;AACAL,QAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASN,KAAV,CAAR;AACH,OAND,CAME,OAAOO,KAAP,EAAc;AACZN,QAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;AACJ,KAVD;;AAWAG,IAAAA,SAAS;AACZ,GAbD;;AAeA,QAAMK,WAAW,GAAG,MAAKD,WAAW,EAApC;;AAIA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5CD;;GAAMD,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { getKanyeQuote } from \"../api/apiCalls\"\n// import axios from \"axios\"\n\nconst StarShip = ({quote, setQuote})=>{\n    \n    useEffect(()=>{\n        console.log('useEffect Working')\n        // this will render the api cal for the first load and assign the state what it was returned which is why we see the first returned api stuff on the screen\n        const fetchData = async () => {\n            try {\n                const res = await getKanyeQuote()//method that does api call\n                // const res = await axios.get('https://api.kanye.rest') or we could have dont it this way \n                console.log(res);\n                console.log(res.data);\n                setQuote(res.data.quote)\n            } catch (error) {\n                setQuote('Something went wrong!')\n            }\n        }\n        fetchData()\n    }, [])//no dependencies so it only runs once then after that its up to the click to change the state \n    \n    const gettingData =()=>{\n        const fetchData = async () => {\n            try {\n                const res = await getKanyeQuote()//method that does api call\n                // const res = await axios.get('https://api.kanye.rest') or we could have dont it this way \n                console.log(res);\n                console.log(res.data);\n                setQuote(res.data.quote)\n            } catch (error) {\n                setQuote('Something went wrong!')\n            }\n        }\n        fetchData()\n    }\n\n    const getNewQuote = ()=> gettingData()\n        \n\n\n    return (\n        <div>\n            <button onClick={getNewQuote}>get Kanye Quote</button>\n            <h1>{quote}</h1>\n        </div>\n    )\n}\nexport default StarShip"]},"metadata":{},"sourceType":"module"}