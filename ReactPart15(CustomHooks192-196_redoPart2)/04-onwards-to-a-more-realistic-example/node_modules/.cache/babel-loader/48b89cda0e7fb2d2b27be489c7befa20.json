{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction useHttp(requestConfig, applyData) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data); // we remove this so the component can pass in a function that will convert it the way the component needs \n      // const loadedTasks = [];\n      // for (const taskKey in data) {\n      //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      // }\n      // setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n}\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"names":["React","useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart15(CustomHooks192-196_redoPart2)/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction useHttp(requestConfig, applyData) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n\n    const sendRequest = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                requestConfig.url, \n                {\n                    method: requestConfig.method ? requestConfig.method : 'GET',\n                    headers: requestConfig.headers ? requestConfig.headers : {},\n                    body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n                }\n\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            applyData(data)\n            // we remove this so the component can pass in a function that will convert it the way the component needs \n            // const loadedTasks = [];\n\n            // for (const taskKey in data) {\n            //     loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n            // }\n\n            // setTasks(loadedTasks);\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    return { isLoading, error, sendRequest }\n}\n\nexport default useHttp\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,OAAT,CAAiBC,aAAjB,EAAgCC,SAAhC,EAA2C;EAAA;;EACvC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;EAGA,MAAMQ,WAAW,GAAG,YAAY;IAC5BH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACxBR,aAAa,CAACS,GADU,EAExB;QACIC,MAAM,EAAEV,aAAa,CAACU,MAAd,GAAuBV,aAAa,CAACU,MAArC,GAA8C,KAD1D;QAEIC,OAAO,EAAEX,aAAa,CAACW,OAAd,GAAwBX,aAAa,CAACW,OAAtC,GAAgD,EAF7D;QAGIC,IAAI,EAAEZ,aAAa,CAACY,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAed,aAAa,CAACY,IAA7B,CAArB,GAA0D;MAHpE,CAFwB,CAA5B;;MAUA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAjB,SAAS,CAACgB,IAAD,CAAT,CAhBA,CAiBA;MACA;MAEA;MACA;MACA;MAEA;IACH,CAzBD,CAyBE,OAAOE,GAAP,EAAY;MACVd,QAAQ,CAACc,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACDjB,YAAY,CAAC,KAAD,CAAZ;EACH,CAhCD;;EAkCA,OAAO;IAAED,SAAF;IAAaE,KAAb;IAAoBE;EAApB,CAAP;AACH;;GAxCQP,O;;AA0CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}