{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\nconst reducer = (state, action) => {\n  // returns one value which is the new state \n  switch (action) {\n    case 'increment':\n      return state + 1;\n\n    case 'decrement':\n      return state - 1;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction CountOneReducer() {\n  _s();\n\n  // takes 2 params first one being the reducer function \n  // the second one being the initial state \n  const [count, dispatch] = useReducer(reducer, initialState); // these arent defined yet \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count - \", count, \" with Reducer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('increment'),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('decrement'),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('reset'),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountOneReducer, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n\n_c = CountOneReducer;\nexport default CountOneReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOneReducer\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneReducer.js"],"names":["React","useReducer","initialState","reducer","state","action","CountOneReducer","count","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B;AACA,UAAQA,MAAR;AACI,SAAK,WAAL;AACI,aAAOD,KAAK,GAAG,CAAf;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,GAAG,CAAf;;AACJ,SAAK,OAAL;AACI,aAAOF,YAAP;;AACJ;AACI,aAAOE,KAAP;AARR;AAUH,CAZD;;AAcA,SAASE,eAAT,GAA2B;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,OAAD,EAAUD,YAAV,CAApC,CAHuB,CAGoC;;AAC3D,sBACI;AAAA,4BACI;AAAA,6BAAcK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAIC,QAAQ,CAAC,WAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAZQF,e;;KAAAA,e;AAcT,eAAeA,eAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nconst initialState = 0\nconst reducer = (state, action) => {\n    // returns one value which is the new state \n    switch (action) {\n        case 'increment':\n            return state + 1\n        case 'decrement':\n            return state - 1\n        case 'reset':\n            return initialState\n        default:\n            return state\n    }\n}\n\nfunction CountOneReducer() {\n    // takes 2 params first one being the reducer function \n    // the second one being the initial state \n    const [count, dispatch] = useReducer(reducer, initialState)// these arent defined yet \n    return (\n        <div>\n            <div>Count - {count} with Reducer</div>\n            <button onClick={()=>dispatch('increment')}>Increment</button>\n            <button onClick={() => dispatch('decrement')}>Decrement</button>\n            <button onClick={() => dispatch('reset')}>Reset</button>\n        </div>\n    );\n}\n\nexport default CountOneReducer;"]},"metadata":{},"sourceType":"module"}