{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer)/01-starting-setup/src/CountOneRef.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountOneRef() {\n  _s();\n\n  // takes 2 params first one being the reducer function \n  // the second one being the initial state \n  const refCount = useRef(); // these arent defined yet \n\n  const refWords = useRef();\n  const [num, setNum] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: refCount,\n      children: [\"Count - \", num, \" With state\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum(refCount.current.value = num + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNum(refCount.current.value = num - 1),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(refWords.current.value);\n        refWords.current.value = '';\n        console.log(refCount.current.value);\n        setNum(refCount.current.value = 0);\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: refWords,\n        type: \"text\",\n        placeholder: \"write something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountOneRef, \"IkPX4Iqusn4jk6sUsHrTwbUc6H0=\");\n\n_c = CountOneRef;\nexport default CountOneRef;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOneRef\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer)/01-starting-setup/src/CountOneRef.js"],"names":["React","useRef","useState","CountOneRef","refCount","refWords","num","setNum","current","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AACA;AACA,QAAMC,QAAQ,GAAGH,MAAM,EAAvB,CAHmB,CAGM;;AACzB,QAAMI,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEE,QAAV;AAAA,6BAA6BE,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,MAAM,CAACH,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,GAAwBH,GAAG,GAAE,CAA9B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMC,MAAM,CAACH,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,GAAwBH,GAAG,GAAE,CAA9B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAK;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACG,OAAT,CAAiBC,KAA7B;AACAJ,QAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACI,OAAT,CAAiBC,KAA7B;AACAF,QAAAA,MAAM,CAACH,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,GAAyB,CAA1B,CAAN;AACH,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAWI;AAAA,6BACA;AAAO,QAAA,GAAG,EAAEJ,QAAZ;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,WAAW,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAvBQF,W;;KAAAA,W;AAyBT,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState } from 'react';\n\nfunction CountOneRef() {\n    // takes 2 params first one being the reducer function \n    // the second one being the initial state \n    const refCount = useRef()// these arent defined yet \n    const refWords = useRef()\n    const [num, setNum] = useState(0)\n    return (\n        <div>\n            <div ref={refCount}>Count - {num} With state</div>\n            <button onClick={() => setNum(refCount.current.value =num+ 1)}>Increment</button>\n            <button onClick={() => setNum(refCount.current.value =num- 1)}>Decrement</button>\n            <button onClick={() =>{\n                console.log(refWords.current.value)\n                refWords.current.value = ''\n                console.log(refCount.current.value)\n                setNum(refCount.current.value = 0)\n            }}>Reset</button>\n            {/* this is just extra ref practice */}\n            <div>\n            <input ref={refWords} type='text' placeholder='write something'></input>\n            </div>\n        </div>\n    );\n}\n\nexport default CountOneRef;"]},"metadata":{},"sourceType":"module"}