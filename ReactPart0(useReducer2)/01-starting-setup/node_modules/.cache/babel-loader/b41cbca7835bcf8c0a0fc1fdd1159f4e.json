{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(ControlledVsUnControlled)/01-starting-setup/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test(props) {\n  _s();\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    //focus the input element\n    inputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      placeholder: `hey ${props.name} type here!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Test, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(ControlledVsUnControlled)/01-starting-setup/src/components/Test.js"],"names":["React","useEffect","useRef","Test","props","inputRef","current","focus","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV;AACAI,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAHQ,EAGN,EAHM,CAAT;AAIA,sBAAS;AAAA,4BACL;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEF,QAAxB;AAAkC,MAAA,WAAW,EAAG,OAAMD,KAAK,CAACI,IAAK;AAAjE;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,qCAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAIH;;GAVQL,I;;KAAAA,I;AAYT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useRef} from 'react';\n\nfunction Test(props) {\n    const inputRef = useRef(null)\n    useEffect(()=>{\n        //focus the input element\n        inputRef.current.focus()\n    }, [])\n    return ( <div>\n        <input type='text' ref={inputRef} placeholder={`hey ${props.name} type here!`}></input>\n        <></>\n    </div> );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}