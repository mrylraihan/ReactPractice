{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneReducer2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducerCounter(state, action) {\n  if (action.type === 'PLUS') {\n    return state + 1;\n  } else if (action.type === 'MINUS') {\n    return state - 1;\n  } else if (action.type === 'RESET') {\n    return state = 0;\n  }\n}\n\nfunction CountOneReducer2() {\n  _s();\n\n  const [count, dispatchCounter] = useReducer(reducerCounter, 0);\n\n  const plusOne = () => {\n    dispatchCounter({\n      type: 'PLUS'\n    });\n  };\n\n  const minusOne = () => {\n    dispatchCounter({\n      type: 'MINUS'\n    });\n  };\n\n  const resetCount = () => {\n    dispatchCounter({\n      type: 'RESET'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"the count is now \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: plusOne,\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: minusOne,\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCount,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountOneReducer2, \"hL9wdMhPk8grCBrjCIC1w0ZacpI=\");\n\n_c = CountOneReducer2;\nexport default CountOneReducer2;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOneReducer2\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneReducer2.js"],"names":["React","useReducer","reducerCounter","state","action","type","CountOneReducer2","count","dispatchCounter","plusOne","minusOne","resetCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAsC;AAClC,MAAGA,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA0B;AACtB,WAAOF,KAAK,GAAG,CAAf;AACH,GAFD,MAEM,IAAIC,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC/B,WAAOF,KAAK,GAAG,CAAf;AACH,GAFK,MAEC,IAAGC,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B;AAC9B,WAAOF,KAAK,GAAG,CAAf;AACH;AAEJ;;AAED,SAASG,gBAAT,GAA4B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BP,UAAU,CAACC,cAAD,EAAiB,CAAjB,CAA3C;;AAEA,QAAMO,OAAO,GAAG,MAAI;AAChBD,IAAAA,eAAe,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf;AACH,GAFD;;AAGA,QAAMK,QAAQ,GAAG,MAAI;AACjBF,IAAAA,eAAe,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf;AACH,GAFD;;AAGA,QAAMM,UAAU,GAAG,MAAI;AACnBH,IAAAA,eAAe,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf;AACH,GAFD;;AAGC,sBACA;AAAA,4BACI;AAAA,sCAAqBE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOH;;GAnBQL,gB;;KAAAA,gB;AAqBT,eAAeA,gBAAf","sourcesContent":["import React, {useReducer} from 'react';\n\n\nfunction reducerCounter(state, action){\n    if(action.type === 'PLUS'){\n        return state + 1\n    }else if (action.type === 'MINUS') {\n        return state - 1\n    } else if(action.type === 'RESET'){\n        return state = 0\n    }\n\n}\n\nfunction CountOneReducer2() {\n   const [count, dispatchCounter] = useReducer(reducerCounter, 0)\n\n   const plusOne = ()=>{\n       dispatchCounter({type: 'PLUS'})\n   }\n   const minusOne = ()=>{\n       dispatchCounter({type: 'MINUS'})\n   }\n   const resetCount = ()=>{\n       dispatchCounter({type: 'RESET'})\n   }\n    return (\n    <div>\n        <p>the count is now {count}</p>\n        <button onClick={plusOne}> + </button>\n        <button onClick={minusOne}> - </button>\n        <button onClick={resetCount}>reset</button>\n    </div>);\n}\n\nexport default CountOneReducer2;"]},"metadata":{},"sourceType":"module"}