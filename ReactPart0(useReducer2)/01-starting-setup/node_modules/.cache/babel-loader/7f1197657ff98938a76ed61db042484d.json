{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneStateObjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountOneStateObjects() {\n  _s();\n\n  // takes 2 params first one being the reducer function \n  // the second one being the initial state \n  const [count, setCount] = useState(0); // these arent defined yet \n\n  const [userInput, setUserInput] = useState('');\n  const [countAndInput, setCountAndInput] = useState({\n    count: 0,\n    userInput: ''\n  });\n\n  const submitInput = () => {\n    console.log(countAndInput);\n    console.log(countAndInput.userInput);\n    setCountAndInput(preV => {\n      return { ...preV,\n        userInput: ''\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: userInput,\n        onChange: e => setCountAndInput(prev => {\n          return { ...prev,\n            userInput: e.target.value\n          };\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitInput,\n        children: \"click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count - \", count, \" With state\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setCountAndInput(prev => {\n        return { ...prev,\n          count: prev.count + 1\n        };\n      }),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setCountAndInput(prev => {\n        return { ...prev,\n          count: prev.count - 1\n        };\n      }),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setCountAndInput(prev => {\n        return { ...prev,\n          count: prev.count = 0\n        };\n      }),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountOneStateObjects, \"QhHkZflP8bZX1by5DBSvO7CGDwY=\");\n\n_c = CountOneStateObjects;\nexport default CountOneStateObjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOneStateObjects\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(useReducer2)/01-starting-setup/src/CountOneStateObjects.js"],"names":["React","useState","CountOneStateObjects","count","setCount","userInput","setUserInput","countAndInput","setCountAndInput","submitInput","console","log","preV","e","prev","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,oBAAT,GAAgC;AAAA;;AAC5B;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC,CAH4B,CAGS;;AACrC,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAK,CAACM,aAAD,EAAiBC,gBAAjB,IAAoCP,QAAQ,CAAC;AAACE,IAAAA,KAAK,EAAC,CAAP;AAAUE,IAAAA,SAAS,EAAE;AAArB,GAAD,CAAjD;;AAEA,QAAMI,WAAW,GAAG,MAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAACF,SAA1B;AACAG,IAAAA,gBAAgB,CAAEI,IAAD,IAAQ;AACrB,aAAO,EAAC,GAAGA,IAAJ;AAAUP,QAAAA,SAAS,EAAE;AAArB,OAAP;AACH,KAFe,CAAhB;AAGH,GAND;;AAOA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEA,SAAd;AAAyB,QAAA,QAAQ,EAAGQ,CAAD,IAAKL,gBAAgB,CAACM,IAAI,IAAE;AAC5D,iBAAQ,EAAC,GAAGA,IAAJ;AAAUT,YAAAA,SAAS,EAACQ,CAAC,CAACE,MAAF,CAASC;AAA7B,WAAR;AAA4C,SADS;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAQ,QAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BAAcN,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAEK,gBAAgB,CAACM,IAAI,IAAI;AACtC,eAAO,EAAE,GAAGA,IAAL;AAAWX,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAa;AAA/B,SAAP;AACH,OAFgC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAQ,MAAA,OAAO,EAAEK,gBAAgB,CAACM,IAAI,IAAI;AACtC,eAAO,EAAE,GAAGA,IAAL;AAAWX,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAa;AAA/B,SAAP;AACH,OAFgC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAQ,MAAA,OAAO,EAAEK,gBAAgB,CAACM,IAAI,IAAI;AACtC,eAAO,EAAE,GAAGA,IAAL;AAAWX,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAa;AAA/B,SAAP;AACH,OAFgC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAlCQD,oB;;KAAAA,oB;AAoCT,eAAeA,oBAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction CountOneStateObjects() {\n    // takes 2 params first one being the reducer function \n    // the second one being the initial state \n    const [count, setCount] = useState(0)// these arent defined yet \n    const [userInput, setUserInput] = useState('')\n\n    const[countAndInput , setCountAndInput]= useState({count:0, userInput: ''})\n\n    const submitInput = ()=>{\n        console.log(countAndInput);\n        console.log(countAndInput.userInput)\n        setCountAndInput((preV)=>{\n            return {...preV, userInput: ''}\n        })\n    }\n    return (\n        <div>\n            <div>\n                <input value={userInput} onChange={(e)=>setCountAndInput(prev=>{\n                   return  {...prev, userInput:e.target.value}})}></input>\n                <button onClick={submitInput}>click me!</button>\n            </div>\n            <div>Count - {count} With state</div>\n            <button onClick={setCountAndInput(prev => {\n                return { ...prev, count: prev.count + 1 }\n            })}>Increment</button>\n            <button onClick={setCountAndInput(prev => {\n                return { ...prev, count: prev.count - 1 }\n            })}>Decrement</button>\n            <button onClick={setCountAndInput(prev => {\n                return { ...prev, count: prev.count = 0 }\n            })}>Reset</button>\n        </div>\n    );\n}\n\nexport default CountOneStateObjects;"]},"metadata":{},"sourceType":"module"}