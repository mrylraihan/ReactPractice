{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart8(PracticeProject2)/01-starting-project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Wrapper from '../Helpers/Wrapper';\nimport Button from '../UI/Button';\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport styles from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const fullNameInputRef = useRef(); // const [userName, setUserName] = useState('')\n  // const [age, setAge] = useState('')\n\n  const [error, setError] = useState(); // const onChangeName = (event) => {\n  //     setUserName(event.target.value)\n  // }\n  // const onChangeAge = (event) => {\n  //     setAge(event.target.value)\n  // }\n\n  const AddUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 && enteredAge.trim().length === 0) {\n      console.log('error');\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty values)'\n      });\n      return;\n    }\n\n    if (+enteredAge <= 1) {\n      console.log('age must be greater then 1');\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (greater then 1)'\n      });\n      return;\n    } // console.log(userName, age);\n\n\n    props.onAddUser(enteredName, enteredAge);\n    console.log(fullNameInputRef.current.value); // how to reset the value with out state or value\n\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n    fullNameInputRef.current.value = ''; // setAge('')\n    // setUserName('')\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      clearError: () => setError()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: AddUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"userName\",\n          type: \"text\" // value={userName} onChange={onChangeName} \n          ,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\" // value={userName} onChange={onChangeName} \n          ,\n          ref: fullNameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age  (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\" // value={age} onChange={onChangeAge} \n          ,\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"iS2EX424F/tHoIVco5j7kdl4v4s=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart8(PracticeProject2)/01-starting-project/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Wrapper","Button","Card","ErrorModal","styles","AddUser","props","nameInputRef","ageInputRef","fullNameInputRef","error","setError","AddUserHandler","event","preventDefault","enteredName","current","value","enteredAge","trim","length","console","log","title","message","onAddUser","input"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport Wrapper from '../Helpers/Wrapper'\nimport Button from '../UI/Button'\nimport Card from '../UI/Card'\nimport ErrorModal from '../UI/ErrorModal'\nimport styles from './AddUser.module.css'\n\nconst AddUser = (props) => {\n    const nameInputRef = useRef()\n    const ageInputRef = useRef()\n    const fullNameInputRef = useRef()\n\n    // const [userName, setUserName] = useState('')\n    // const [age, setAge] = useState('')\n    const [error, setError]=useState()\n\n    // const onChangeName = (event) => {\n    //     setUserName(event.target.value)\n    // }\n    // const onChangeAge = (event) => {\n    //     setAge(event.target.value)\n    // }\n\n    const AddUserHandler = (event) => {\n        event.preventDefault()\n        const enteredName = nameInputRef.current.value;\n        const enteredAge = ageInputRef.current.value;\n        if (enteredName.trim().length === 0 && enteredAge.trim().length === 0) {\n            console.log('error');\n            setError({\n                title: 'Invalid input', \n                message:'Please enter a valid name and age (non-empty values)'\n            })\n            return\n        }\n        if (+enteredAge <= 1) {\n            console.log('age must be greater then 1');\n            setError({\n                title: 'Invalid age',\n                message: 'Please enter a valid age (greater then 1)'\n            })\n            return\n        }\n        // console.log(userName, age);\n        props.onAddUser(enteredName, enteredAge);\n        console.log(fullNameInputRef.current.value)\n        // how to reset the value with out state or value\n        nameInputRef.current.value = ''\n        ageInputRef.current.value = ''\n        fullNameInputRef.current.value = ''\n        // setAge('')\n        // setUserName('')\n    }\n\n\n    return (\n        <Wrapper>\n            {error &&  <ErrorModal title={error.title} message={error.message} clearError={()=>setError()}/>}\n            <Card className={styles.input}>\n                <form onSubmit={AddUserHandler}>\n                    <label htmlFor='userName'>UserName</label>\n                    <input id='userName' type='text' \n                    // value={userName} onChange={onChangeName} \n                    ref={nameInputRef}/>\n                    <label htmlFor='name'>Full Name</label>\n                    <input id='name' type='text' \n                    // value={userName} onChange={onChangeName} \n                    ref={fullNameInputRef}/>\n                    <label htmlFor='age'>Age  (Years)</label>\n                    <input id='age' type='number' \n                    // value={age} onChange={onChangeAge} \n                    ref={ageInputRef}/>\n                    {/* <button type='submit'>Add User</button> */}\n                    <Button type='submit'>Add User</Button>\n                </form>\n            </Card>\n        </Wrapper>\n    )\n}\nexport default AddUser"]},"metadata":{},"sourceType":"module"}