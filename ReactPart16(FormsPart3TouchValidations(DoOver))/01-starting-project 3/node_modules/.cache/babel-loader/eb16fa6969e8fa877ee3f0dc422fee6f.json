{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1useReforuseState(DoOver))/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(''); //working with onChange meaning every key stroke \n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  }; // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(enteredName); //Only when the form is submitted it will log the value\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //Only when the form is submitted it will log the ref value\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"cES3kCRDZaoXz9Pz4Jbvll6lxgs=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","enteredValue","current"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1useReforuseState(DoOver))/01-starting-project 3/src/components/SimpleInput.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\n\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('') //working with onChange meaning every key stroke \n\n  const nameInputChangeHandler = event =>{\n    setEnteredName(event.target.value)\n  }\n\n// console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n\n  const formSubmissionHandler = event =>{\n    event.preventDefault()\n    console.log(enteredName);//Only when the form is submitted it will log the value\n    const enteredValue = nameInputRef.current.value\n    console.log(enteredValue);//Only when the form is submitted it will log the ref value\n  }\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} ref={nameInputRef}/>\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAEsB;;EAEnD,MAAMM,sBAAsB,GAAGC,KAAK,IAAG;IACrCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD,CAJ6B,CAQ/B;;;EAEE,MAAMC,qBAAqB,GAAGH,KAAK,IAAG;IACpCA,KAAK,CAACI,cAAN;IACAC,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAFoC,CAEX;;IACzB,MAAMU,YAAY,GAAGX,YAAY,CAACY,OAAb,CAAqBN,KAA1C;IACAG,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAJoC,CAIV;EAC3B,CALD;;EAMA,oBACE;IAAM,QAAQ,EAAEJ,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA6B,QAAQ,EAAEJ,sBAAvC;QAA+D,KAAK,EAAEF,WAAtE;QAAmF,GAAG,EAAED;MAAxF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA3BD;;GAAMF,W;;KAAAA,W;AA6BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}