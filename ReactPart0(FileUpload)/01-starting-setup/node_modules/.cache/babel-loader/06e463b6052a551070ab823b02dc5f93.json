{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(PersonalPractice)/01-starting-setup/src/components/TestStateFunc2.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TestStateFunc2 = props => {\n  _s();\n\n  const [chair, setChair] = useState(props.chair);\n\n  const changeChair = () => {\n    // let oldChair = chair \n    // this will toggle betwen the two options \n    // if(chair !== 'Areon'){\n    //     setChair('Areon')\n    // } else if (chair === 'Areon'){\n    //     setChair(props.chair)\n    // } or you can use a ternerary operator\n    let newChair = chair;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"my favorite chair is a \", chair]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeChair,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestStateFunc2, \"iN0VqSnoCvDr/lqMcGE/aC099aQ=\");\n\n_c = TestStateFunc2;\nexport default TestStateFunc2;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestStateFunc2\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart0(PersonalPractice)/01-starting-setup/src/components/TestStateFunc2.js"],"names":["useState","TestStateFunc2","props","chair","setChair","changeChair","newChair"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAU;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAlC;;AAEA,QAAME,WAAW,GAAG,MAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,QAAQ,GAAGH,KAAf;AACH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAA,4CAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH,CArBD;;GAAMJ,c;;KAAAA,c;AAuBN,eAAeA,cAAf","sourcesContent":["import { useState } from \"react\"\n\nconst TestStateFunc2 = (props) =>{\n    const [chair, setChair] = useState(props.chair)\n\n    const changeChair = ()=> {\n        // let oldChair = chair \n        // this will toggle betwen the two options \n        // if(chair !== 'Areon'){\n        //     setChair('Areon')\n        // } else if (chair === 'Areon'){\n        //     setChair(props.chair)\n        // } or you can use a ternerary operator\n        let newChair = chair\n    }\n\n    return (\n        <>\n            <h1>my favorite chair is a {chair}</h1>\n            <button onClick={changeChair}>click me</button>\n        </>\n    )\n\n}\n\nexport default TestStateFunc2"]},"metadata":{},"sourceType":"module"}