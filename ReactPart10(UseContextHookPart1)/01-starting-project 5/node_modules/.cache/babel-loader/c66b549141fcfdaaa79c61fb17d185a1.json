{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseContextPart1)/01-starting-project 5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storesUSerLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n    if (storesUSerLoggedInInfo === '1') {\n      setIsLoggedIn('true');\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n  };\n\n  return (\n    /*#__PURE__*/\n    // now every Component wrapped will have access to the authContext\n    // Provider is stating that any wrapped here will have access\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseContextPart1)/01-starting-project 5/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storesUSerLoggedInInfo","localStorage","getItem","console","log","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMQ,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;;AACA,QAAIF,sBAAsB,KAAK,GAA/B,EAAoC;AAClCD,MAAAA,aAAa,CAAC,MAAD,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAHD,MAGK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,GARQ,EAQN,EARM,CAAT;;AAWA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMU,aAAa,GAAG,MAAM;AAC1BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAACS,UAAb,CAAwB,YAAxB;AACD,GAHD;;AAKA;AAAA;AACE;AACA;AACA,YAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAC3BZ,QAAAA,UAAU,EAAE;AADe,OAA7B;AAAA,8BAGE,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEA,UAA7B;AAAyC,QAAA,QAAQ,EAAEW;AAAnD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,mBACG,CAACX,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADlB,EAEGP,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAcD;;GAvCQZ,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(()=>{\n    const storesUSerLoggedInInfo = localStorage.getItem('isLoggedIn')\n    if (storesUSerLoggedInInfo === '1') {\n      setIsLoggedIn('true')\n      console.log(true);\n    }else{\n      console.log(false);\n    }\n  }, [])\n  \n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1')\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn')\n  };\n\n  return (\n    // now every Component wrapped will have access to the authContext\n    // Provider is stating that any wrapped here will have access\n    <AuthContext.Provider value={{\n      isLoggedIn: false,\n    }}>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n     \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}