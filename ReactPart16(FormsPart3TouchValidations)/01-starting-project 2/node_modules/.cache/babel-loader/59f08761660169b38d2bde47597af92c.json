{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1)/01-starting-project 2/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enterName, setEnteredName] = useState('');\n  const nameInputRef = useRef();\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); // if you need every keystroke for example your going to validate it on every keystroke the state is better. \n\n    console.log(enterName, ' state');\n    setEnteredName(''); // if you need the value only once then a ref is better \n\n    console.log(nameInputRef.current.value, ' ref'); // nameInputRef.current.value = ''// this manipulates the dom though so not ideal =\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        value: enterName,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"MzHZMXHPkemm4VPuKw2cg5rozT4=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","enterName","setEnteredName","nameInputRef","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","current"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart1)/01-starting-project 2/src/components/SimpleInput.js"],"sourcesContent":["import {useRef,useState } from 'react'\n\nconst SimpleInput = (props) => {\nconst [enterName, setEnteredName] = useState('')\n  const nameInputRef = useRef()\n\nconst nameInputChangeHandler = event=>{\n  setEnteredName(event.target.value)\n}\n\nconst formSubmissionHandler = event=>{\n  event.preventDefault()\n  // if you need every keystroke for example your going to validate it on every keystroke the state is better. \n  console.log(enterName, ' state');\n  setEnteredName('')\n  // if you need the value only once then a ref is better \n  console.log(nameInputRef.current.value, ' ref');\n  // nameInputRef.current.value = ''// this manipulates the dom though so not ideal =\n  \n}\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name'  ref={nameInputRef}  value={enterName} onChange={nameInputChangeHandler} />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAAQA,MAAR,EAAeC,QAAf,QAA+B,OAA/B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;EACE,MAAMK,YAAY,GAAGN,MAAM,EAA3B;;EAEF,MAAMO,sBAAsB,GAAGC,KAAK,IAAE;IACpCH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,qBAAqB,GAAGH,KAAK,IAAE;IACnCA,KAAK,CAACI,cAAN,GADmC,CAEnC;;IACAC,OAAO,CAACC,GAAR,CAAYV,SAAZ,EAAuB,QAAvB;IACAC,cAAc,CAAC,EAAD,CAAd,CAJmC,CAKnC;;IACAQ,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACS,OAAb,CAAqBL,KAAjC,EAAwC,MAAxC,EANmC,CAOnC;EAED,CATD;;EAWE,oBACE;IAAM,QAAQ,EAAEC,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,MAAtB;QAA8B,GAAG,EAAEL,YAAnC;QAAkD,KAAK,EAAEF,SAAzD;QAAoE,QAAQ,EAAEG;MAA9E;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA9BD;;GAAML,W;;KAAAA,W;AAgCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}