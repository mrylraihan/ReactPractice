{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart14(OurStartingApp&BackendPart4-HttpErrors)/01-starting-project 4/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://swapi.dev/api/film/');\n\n      if (!result.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const result = await res.json();\n      console.log(result);\n      const transformedMovies = result.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovieList(transformedMovies); // setIsLoading(false)//this wont stop loading if it errors\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setIsLoading(false); //so regardless if its a good or bad request it will stop loading \n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: movieList.length > 0 ? setMovieList.bind(this, []) : fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, !isLoading && movieList.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movieList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  }), !isLoading && error && movieList.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 58\n    }\n  }, \"Sorry no movies found!\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }, \"Loading...\"), !isLoading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, error)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movieList","setMovieList","isLoading","setIsLoading","error","setError","fetchMoviesHandler","res","fetch","result","ok","Error","json","console","log","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length","bind"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart14(OurStartingApp&BackendPart4-HttpErrors)/01-starting-project 4/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movieList, setMovieList] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  async function fetchMoviesHandler(){\n    setIsLoading(true)\n    setError(null)\n    try{\n      const res = await fetch('https://swapi.dev/api/film/')\n      if (!result.ok) {\n        throw new Error('Something went wrong')\n      }\n      const result = await res.json()\n      \n      console.log(result)\n      const transformedMovies = result.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      })\n      setMovieList(transformedMovies)\n      // setIsLoading(false)//this wont stop loading if it errors\n    }catch(error){\n      console.log(error);\n      setError(error.message)\n    }\n    setIsLoading(false)//so regardless if its a good or bad request it will stop loading \n  \n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={movieList.length>0?setMovieList.bind(this,[]):fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading&& movieList.length> 0 &&<MoviesList movies={movieList} />}\n        {!isLoading && error && movieList.length === 0 &&<p>Sorry no movies found!</p>}\n        {isLoading&& <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAIb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,eAAeS,kBAAf,GAAmC;IACjCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAG;MACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;;MACA,IAAI,CAACC,MAAM,CAACC,EAAZ,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,MAAMF,MAAM,GAAG,MAAMF,GAAG,CAACK,IAAJ,EAArB;MAEAC,OAAO,CAACC,GAAR,CAAYL,MAAZ;MACA,MAAMM,iBAAiB,GAAGN,MAAM,CAACO,OAAP,CAAeC,GAAf,CAAmBC,SAAS,IAAI;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAxB,YAAY,CAACc,iBAAD,CAAZ,CAhBC,CAiBD;IACD,CAlBD,CAkBC,OAAMX,KAAN,EAAY;MACXS,OAAO,CAACC,GAAR,CAAYV,KAAZ;MACAC,QAAQ,CAACD,KAAK,CAACsB,OAAP,CAAR;IACD;;IACDvB,YAAY,CAAC,KAAD,CAAZ,CAzBiC,CAyBd;EAEpB;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEH,SAAS,CAAC2B,MAAV,GAAiB,CAAjB,GAAmB1B,YAAY,CAAC2B,IAAb,CAAkB,IAAlB,EAAuB,EAAvB,CAAnB,GAA8CtB,kBAA/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACJ,SAAD,IAAaF,SAAS,CAAC2B,MAAV,GAAkB,CAA/B,iBAAmC,oBAAC,UAAD;IAAY,MAAM,EAAE3B,SAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADtC,EAEG,CAACE,SAAD,IAAcE,KAAd,IAAuBJ,SAAS,CAAC2B,MAAV,KAAqB,CAA5C,iBAAgD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAFnD,EAGGzB,SAAS,iBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAHf,EAIG,CAACA,SAAD,IAAcE,KAAd,iBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,KAAJ,CAJ1B,CAJF,CADF;AAaD;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}