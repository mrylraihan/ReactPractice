{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseContextHookPart5)/01-starting-project 5/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storesUSerLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n    if (storesUSerLoggedInInfo === '1') {\n      setIsLoggedIn('true');\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart10(UseContextHookPart5)/01-starting-project 5/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","useEffect","storesUSerLoggedInInfo","localStorage","getItem","console","log","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAI,CAAE,CAFoB;AAGpCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAmB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;;AACA,QAAIF,sBAAsB,KAAK,GAA/B,EAAoC;AAChCF,MAAAA,aAAa,CAAC,MAAD,CAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAHD,MAGO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ,GARQ,EAQN,EARM,CAAT;;AASA,QAAMC,aAAa,GAAG,MAAI;AACtBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAIA,QAAMS,YAAY,GAAG,MAAI;AACrBN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAV,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACP,MAAAA,UAAU,EAACA,UAAZ;AAAwBC,MAAAA,QAAQ,EAAEa,aAAlC;AAAiDZ,MAAAA,OAAO,EAAEc;AAA1D,KAA7B;AAAA,cAAuGV,KAAK,CAACY;AAA7G;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtBM;;GAAMb,mB;;KAAAA,mB;AAwBb,eAAeP,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: ()=>{},\n    onLogin :(email, password)=>{}\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n   \n    useEffect(() => {\n        const storesUSerLoggedInInfo = localStorage.getItem('isLoggedIn')\n        if (storesUSerLoggedInInfo === '1') {\n            setIsLoggedIn('true')\n            console.log(true);\n        } else {\n            console.log(false);\n        }\n    }, [])\n    const logoutHandler = ()=>{\n        localStorage.removeItem('isLoggedIn')\n        setIsLoggedIn(false);\n    }\n    const loginHandler = ()=>{\n        localStorage.setItem('isLoggedIn', '1')\n        setIsLoggedIn(true);\n    }\n\n    return <AuthContext.Provider value={{isLoggedIn:isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>{props.children}</AuthContext.Provider>;\n}\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}