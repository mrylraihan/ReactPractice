{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart14(OurStartingApp&BackendPart4-HttpErrorsUseEffect)/01-starting-project 4/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []); //if this was const fetchasync ()=>{\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://swapi.dev/api/films/'); // with errors \n      // const res = await fetch('https://swapi.dev/api/films/') no errors\n\n      if (!res.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const result = await res.json();\n      const transformedMovies = result.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovieList(transformedMovies); // setIsLoading(false)//this wont stop loading if it errors\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setIsLoading(false); //so regardless if its a good or bad request it will stop loading \n  } //this is a cleaner way to assign what needs to get rendered depending on what our state is\n  //assigning the content to what ever is true and not rendering if anything is false \n\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"No movies Found ...\");\n\n  if (movieList.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movieList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: movieList.length > 0 ? setMovieList.bind(this, []) : fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","MoviesList","App","movieList","setMovieList","isLoading","setIsLoading","error","setError","fetchMoviesHandler","res","fetch","ok","Error","result","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","console","log","message","content","length","bind"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart14(OurStartingApp&BackendPart4-HttpErrorsUseEffect)/01-starting-project 4/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movieList, setMovieList] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  \n  useEffect(()=>{\n    fetchMoviesHandler()\n  }, [])\n  \n  //if this was const fetchasync ()=>{\n  async function fetchMoviesHandler(){\n    setIsLoading(true)\n    setError(null)\n    try{\n      const res = await fetch('https://swapi.dev/api/films/') // with errors \n      // const res = await fetch('https://swapi.dev/api/films/') no errors\n      if (!res.ok) {\n        throw new Error('Something went wrong')\n      }\n      const result = await res.json()\n      \n      const transformedMovies = result.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      })\n      setMovieList(transformedMovies)\n      // setIsLoading(false)//this wont stop loading if it errors\n    }catch(error){\n      console.log(error);\n      setError(error.message)\n    }\n    setIsLoading(false)//so regardless if its a good or bad request it will stop loading \n  \n  }\n\n  //this is a cleaner way to assign what needs to get rendered depending on what our state is\n  //assigning the content to what ever is true and not rendering if anything is false \n  let content = <p>No movies Found ...</p>\n\n  if (movieList.length > 0){\n    content = <MoviesList movies={movieList} />\n  }\n  if(isLoading){\n    content = <p>Loading...</p>\n  }\n\n  if(error){\n    content = <p>{error}</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={movieList.length>0?setMovieList.bind(this,[]):fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* this content will replace all those conditionals and checks because its getting assign above to what ever is true */}\n        {content} \n        {/* {!isLoading && movieList.length > 0 && <MoviesList movies={movieList} />}\n        {!isLoading && !error && movieList.length === 0 && <p>Sorry no movies found!</p>}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>} */}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAI;IACZS,kBAAkB;EACnB,CAFQ,EAEN,EAFM,CAAT,CALa,CASb;;EACA,eAAeA,kBAAf,GAAmC;IACjCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAG;MACD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB,CADC,CACuD;MACxD;;MACA,IAAI,CAACD,GAAG,CAACE,EAAT,EAAa;QACX,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAArB;MAEA,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,OAAP,CAAeC,GAAf,CAAmBC,SAAS,IAAI;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAtB,YAAY,CAACY,iBAAD,CAAZ,CAhBC,CAiBD;IACD,CAlBD,CAkBC,OAAMT,KAAN,EAAY;MACXoB,OAAO,CAACC,GAAR,CAAYrB,KAAZ;MACAC,QAAQ,CAACD,KAAK,CAACsB,OAAP,CAAR;IACD;;IACDvB,YAAY,CAAC,KAAD,CAAZ,CAzBiC,CAyBd;EAEpB,CArCY,CAuCb;EACA;;;EACA,IAAIwB,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAAd;;EAEA,IAAI3B,SAAS,CAAC4B,MAAV,GAAmB,CAAvB,EAAyB;IACvBD,OAAO,gBAAG,oBAAC,UAAD;MAAY,MAAM,EAAE3B,SAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAV;EACD;;EACD,IAAGE,SAAH,EAAa;IACXyB,OAAO,gBAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAV;EACD;;EAED,IAAGvB,KAAH,EAAS;IACPuB,OAAO,gBAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIvB,KAAJ,CAAV;EACD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEJ,SAAS,CAAC4B,MAAV,GAAiB,CAAjB,GAAmB3B,YAAY,CAAC4B,IAAb,CAAkB,IAAlB,EAAuB,EAAvB,CAAnB,GAA8CvB,kBAA/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEGqB,OAFH,CAJF,CADF;AAeD;;AAED,eAAe5B,GAAf"},"metadata":{},"sourceType":"module"}