{"ast":null,"code":"var _jsxFileName = \"/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart6MySolution(DoOver))/01-starting-project 3/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Validating opn blur meaning when the input looses focus \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(''); //working with onChange meaning every key stroke \n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(''); //working with onChange meaning every key stroke \n\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false); // checking name input\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched; // checking email input\n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && emailInputIsInvalid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  }; // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      console.log('you dont have anything');\n      return;\n    }\n\n    console.log(enteredName); //Only when the form is submitted it will log the state value\n\n    setEnteredName(''); //resetting the enteredName state \n\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid && emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"you dont have anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"you dont have anything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["/Volumes/Wallies Extreme SSD/VscodeWorkspaceSSD/VstudioCode/ReactPractice/ReactPart16(FormsPart6MySolution(DoOver))/01-starting-project 3/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState } from 'react'\n\n// Validating opn blur meaning when the input looses focus \n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('') //working with onChange meaning every key stroke \n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\n  const [enteredEmail, setEnteredEmail] = useState('') //working with onChange meaning every key stroke \n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n  // checking name input\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  // checking email input\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched; \n\n\n  let formIsValid = false;\n  if (enteredNameIsValid && emailInputIsInvalid) {\n    formIsValid = true\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value)\n  }\n\n  // console.log(enteredName);//will log event time the state changes because the component is getting rerendered \n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true)\n  }\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true)\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault()\n    setEnteredNameTouched(true)\n    setEnteredEmailTouched(true)\n    if(!enteredNameIsValid && !enteredEmailIsValid){\n      console.log('you dont have anything');\n      return \n    }\n    console.log(enteredName);//Only when the form is submitted it will log the state value\n    setEnteredName('')//resetting the enteredName state \n    setEnteredNameTouched(false)\n    setEnteredEmail('')\n    setEnteredEmailTouched(false)\n\n  }\n\n  \n  const nameInputClasses = nameInputIsInvalid  && emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n  \n  return (\n    <form onSubmit={formSubmissionHandler}>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n      </div>\n      {nameInputIsInvalid && <p className='error-text'>you dont have anything</p>}\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Email</label>\n        <input type='text' id='name' onChange={emailInputChangeHandler} value={enteredEmail} onBlur={emailInputBlurHandler} />\n      </div>\n      {nameInputIsInvalid && <p className='error-text'>you dont have anything</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}